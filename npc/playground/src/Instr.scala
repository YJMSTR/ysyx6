import chisel3._
import chisel3.util._ 
import chisel3.util.BitPat
import Configs._


object Instr {

/*** RV64I ***/
  val EBREAK  = BitPat("b00000000000100000000000001110011")

  // U-type
  val AUIPC   = BitPat("b?????????????????????????0010111")
  val LUI     = BitPat("b?????????????????????????0110111")

  // I-type
  // INSTPAT("??????? ????? ????? 011 ????? 00000 11", ld     , I, R(rd) = Mr(src1 + src2, 8));
  val LH      = BitPat("b?????????????????001?????0000011")
  val LHU     = BitPat("b?????????????????101?????0000011")
  val LB      = BitPat("b?????????????????000?????0000011")
  val LBU     = BitPat("b?????????????????100?????0000011")
  val LW      = BitPat("b?????????????????010?????0000011")
  val LWU     = BitPat("b?????????????????110?????0000011")
  val LD      = BitPat("b?????????????????011?????0000011")

  val ADDI    = BitPat("b?????????????????000?????0010011")
  val SLTI    = BitPat("b?????????????????010?????0010011")
  val SLTIU   = BitPat("b?????????????????011?????0010011")
  val JALR    = BitPat("b?????????????????000?????1100111")
  val ADDIW   = BitPat("b?????????????????000?????0011011")
  val SRAI    = BitPat("b010000???????????101?????0010011")
  val ANDI    = BitPat("b?????????????????111?????0010011")
  val ORI     = BitPat("b?????????????????110?????0010011")
  val XORI    = BitPat("b?????????????????100?????0010011")
  val SLLI    = BitPat("b000000???????????001?????0010011")
  val SRLI    = BitPat("b000000???????????101?????0010011")
  val SLLIW   = BitPat("b000000???????????001?????0011011")
  val SRAIW   = BitPat("b010000???????????101?????0011011")
  val SRLIW   = BitPat("b000000???????????101?????0011011")
  
  // J-type
  val JAL     = BitPat("b?????????????????????????1101111") 

  // S-type 
  val SB      = BitPat("b?????????????????000?????0100011")
  val SH      = BitPat("b?????????????????001?????0100011")
  val SW      = BitPat("b?????????????????010?????0100011")
  val SD      = BitPat("b?????????????????011?????0100011")

  // R-type
  val ADD     = BitPat("b0000000??????????000?????0110011")
  val SUB     = BitPat("b0100000??????????000?????0110011")
  val ADDW    = BitPat("b0000000??????????000?????0111011")
  val SUBW    = BitPat("b0100000??????????000?????0111011")
  val SLL     = BitPat("b0000000??????????001?????0110011")
  val SLLW    = BitPat("b0000000??????????001?????0111011")
  val AND     = BitPat("b0000000??????????111?????0110011")
  val SLTU    = BitPat("b0000000??????????011?????0110011")
  val OR      = BitPat("b0000000??????????110?????0110011")
  val XOR     = BitPat("b0000000??????????100?????0110011")
  val MUL     = BitPat("b0000001??????????000?????0110011")
  val MULH    = BitPat("b0000001??????????001?????0110011")
  val MULW    = BitPat("b0000001??????????000?????0111011")
  val MULHU   = BitPat("b0000001??????????011?????0110011")
  val DIVU    = BitPat("b0000001??????????101?????0110011")
  val DIV     = BitPat("b0000001??????????100?????0110011")
  val DIVW    = BitPat("b0000001??????????100?????0111011")
  val DIVUW   = BitPat("b0000001??????????101?????0111011")
  val REMU    = BitPat("b0000001??????????111?????0110011")
  val REM     = BitPat("b0000001??????????110?????0110011")
  val REMUW   = BitPat("b0000001??????????111?????0111011")
  val REMW    = BitPat("b0000001??????????110?????0111011")
  val SLT     = BitPat("b0000000??????????010?????0110011")
  val SRA     = BitPat("b0100000??????????101?????0110011")
  val SRAW    = BitPat("b0100000??????????101?????0111011")
  val SRL     = BitPat("b0000000??????????101?????0110011")
  val SRLW    = BitPat("b0000000??????????101?????0111011")

  // B-type
  val BEQ     = BitPat("b?????????????????000?????1100011")
  val BNE     = BitPat("b?????????????????001?????1100011")
  val BGE     = BitPat("b?????????????????101?????1100011")
  val BLT     = BitPat("b?????????????????100?????1100011")
  val BLTU    = BitPat("b?????????????????110?????1100011")
  val BGEU    = BitPat("b?????????????????111?????1100011")

}
