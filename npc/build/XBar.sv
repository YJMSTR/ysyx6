// Generated by CIRCT firtool-1.44.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module XBar(	// @[<stdin>:851:10]
  input         clock,	// @[<stdin>:852:11]
                reset,	// @[<stdin>:853:11]
  input  [31:0] io_axi4in_araddr,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4in_arvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4in_rready,	// @[playground/src/XBar.scala:6:14]
  input  [31:0] io_axi4in_awaddr,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4in_awvalid,	// @[playground/src/XBar.scala:6:14]
  input  [63:0] io_axi4in_wdata,	// @[playground/src/XBar.scala:6:14]
  input  [7:0]  io_axi4in_wstrb,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4in_wvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4in_bready,	// @[playground/src/XBar.scala:6:14]
                io_axi4out0_awready,	// @[playground/src/XBar.scala:6:14]
                io_axi4out0_wready,	// @[playground/src/XBar.scala:6:14]
  input  [1:0]  io_axi4out0_bresp,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4out0_bvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out1_arready,	// @[playground/src/XBar.scala:6:14]
  input  [63:0] io_axi4out1_rdata,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4out1_rvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out1_awready,	// @[playground/src/XBar.scala:6:14]
                io_axi4out1_wready,	// @[playground/src/XBar.scala:6:14]
  input  [1:0]  io_axi4out1_bresp,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4out1_bvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out2_arready,	// @[playground/src/XBar.scala:6:14]
  input  [63:0] io_axi4out2_rdata,	// @[playground/src/XBar.scala:6:14]
  input  [1:0]  io_axi4out2_rresp,	// @[playground/src/XBar.scala:6:14]
  input         io_axi4out2_rvalid,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4in_arready,	// @[playground/src/XBar.scala:6:14]
  output [63:0] io_axi4in_rdata,	// @[playground/src/XBar.scala:6:14]
  output [1:0]  io_axi4in_rresp,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4in_rvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4in_awready,	// @[playground/src/XBar.scala:6:14]
                io_axi4in_wready,	// @[playground/src/XBar.scala:6:14]
  output [1:0]  io_axi4in_bresp,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4in_bvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out0_awvalid,	// @[playground/src/XBar.scala:6:14]
  output [63:0] io_axi4out0_wdata,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4out0_wvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out0_bready,	// @[playground/src/XBar.scala:6:14]
  output [31:0] io_axi4out1_araddr,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4out1_arvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out1_rready,	// @[playground/src/XBar.scala:6:14]
  output [31:0] io_axi4out1_awaddr,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4out1_awvalid,	// @[playground/src/XBar.scala:6:14]
  output [63:0] io_axi4out1_wdata,	// @[playground/src/XBar.scala:6:14]
  output [7:0]  io_axi4out1_wstrb,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4out1_wvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out1_bready,	// @[playground/src/XBar.scala:6:14]
  output [31:0] io_axi4out2_araddr,	// @[playground/src/XBar.scala:6:14]
  output        io_axi4out2_arvalid,	// @[playground/src/XBar.scala:6:14]
                io_axi4out2_rready	// @[playground/src/XBar.scala:6:14]
);

  wire [63:0] _empty_master_out_io_axi4_rdata;	// @[playground/src/XBar.scala:17:32]
  wire [1:0]  _empty_master_out_io_axi4_rresp;	// @[playground/src/XBar.scala:17:32]
  wire [1:0]  _empty_master_out_io_axi4_bresp;	// @[playground/src/XBar.scala:17:32]
  wire [31:0] _empty_slave_in2_io_axi4_araddr;	// @[playground/src/XBar.scala:16:31]
  wire [31:0] _empty_slave_in1_io_axi4_araddr;	// @[playground/src/XBar.scala:15:31]
  wire [31:0] _empty_slave_in1_io_axi4_awaddr;	// @[playground/src/XBar.scala:15:31]
  wire [63:0] _empty_slave_in1_io_axi4_wdata;	// @[playground/src/XBar.scala:15:31]
  wire [7:0]  _empty_slave_in1_io_axi4_wstrb;	// @[playground/src/XBar.scala:15:31]
  wire [63:0] _empty_slave_in0_io_axi4_wdata;	// @[playground/src/XBar.scala:14:31]
  reg  [63:0] casez_tmp;	// @[playground/src/XBar.scala:32:19, :34:32]
  reg  [1:0]  casez_tmp_0;	// @[playground/src/XBar.scala:32:19, :34:32]
  reg  [1:0]  casez_tmp_1;	// @[playground/src/XBar.scala:22:13, :32:19]
  reg  [63:0] casez_tmp_2;	// @[playground/src/XBar.scala:32:19, :66:19]
  reg  [1:0]  casez_tmp_3;	// @[playground/src/XBar.scala:32:19, :66:19]
  reg         casez_tmp_4;	// @[playground/src/XBar.scala:32:19, :66:19]
  reg         casez_tmp_5;	// @[playground/src/XBar.scala:32:19, :66:19]
  reg  [1:0]  casez_tmp_6;	// @[playground/src/XBar.scala:66:19, :68:32]
  reg         casez_tmp_7;	// @[playground/src/XBar.scala:66:19, :68:32]
  reg  [1:0]  state_r;	// @[playground/src/XBar.scala:27:24]
  reg  [1:0]  state_w;	// @[playground/src/XBar.scala:30:24]
  wire        _GEN = state_r == 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:27:24, :32:19]
  wire        _GEN_0 = io_axi4in_araddr[31] & {32'h0, io_axi4in_araddr} < 64'h88000000;	// @[playground/src/XBar.scala:35:{31,53,73,94}]
  wire        _GEN_1 =
    io_axi4in_araddr == 32'hA0000048 | io_axi4in_araddr == 32'hA000004C;	// @[playground/src/XBar.scala:40:{37,60,80,104}]
  wire        _GEN_2 = _GEN_0 | _GEN_1;	// @[playground/src/XBar.scala:22:13, :35:{53,116}, :40:{60,111}, :43:27]
  wire        _GEN_3 = ~io_axi4in_arvalid | _GEN_2;	// @[playground/src/XBar.scala:22:13, :34:32, :35:116, :40:111, :43:27]
  wire        _GEN_4 = state_r == 2'h1;	// @[<stdin>:851:10, playground/src/XBar.scala:27:24, :32:19]
  wire        _GEN_5 = _GEN | ~_GEN_4;	// @[playground/src/XBar.scala:20:15, :32:19]
  wire        _GEN_6 = state_r == 2'h2;	// @[<stdin>:851:10, playground/src/XBar.scala:27:24, :32:19]
  wire        _GEN_7 = _GEN | _GEN_4;	// @[playground/src/XBar.scala:21:15, :32:19]
  wire        _GEN_8 =
    ~_GEN & (_GEN_4 ? io_axi4out1_arready : _GEN_6 & io_axi4out2_arready);	// @[playground/src/XBar.scala:20:15, :22:13, :32:19, :53:17, :59:17]
  always_comb begin	// @[playground/src/XBar.scala:22:13, :32:19, :34:32, :53:17, :59:17]
    casez (state_r)	// @[playground/src/XBar.scala:22:13, :27:24, :32:19, :34:32, :53:17, :59:17]
      2'b00:
        casez_tmp = _GEN_3 ? _empty_master_out_io_axi4_rdata : 64'h0;	// @[playground/src/XBar.scala:6:14, :14:31, :17:32, :22:13, :32:19, :34:32, :35:116, :53:17, :59:17]
      2'b01:
        casez_tmp = io_axi4out1_rdata;	// @[playground/src/XBar.scala:22:13, :32:19, :34:32, :53:17, :59:17]
      2'b10:
        casez_tmp = io_axi4out2_rdata;	// @[playground/src/XBar.scala:22:13, :32:19, :34:32, :53:17, :59:17]
      default:
        casez_tmp = _empty_master_out_io_axi4_rdata;	// @[playground/src/XBar.scala:17:32, :22:13, :32:19, :34:32, :53:17, :59:17]
    endcase	// @[playground/src/XBar.scala:22:13, :27:24, :32:19, :34:32, :53:17, :59:17]
  end // always_comb
  always_comb begin	// @[playground/src/XBar.scala:22:13, :32:19, :34:32, :53:17, :59:17]
    casez (state_r)	// @[playground/src/XBar.scala:22:13, :27:24, :32:19, :34:32, :53:17, :59:17]
      2'b00:
        casez_tmp_0 = _GEN_3 ? _empty_master_out_io_axi4_rresp : 2'h3;	// @[<stdin>:851:10, playground/src/XBar.scala:17:32, :22:13, :32:19, :34:32, :35:116, :53:17, :59:17]
      2'b01:
        casez_tmp_0 = 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:22:13, :32:19, :34:32, :53:17, :59:17]
      2'b10:
        casez_tmp_0 = io_axi4out2_rresp;	// @[playground/src/XBar.scala:22:13, :32:19, :34:32, :53:17, :59:17]
      default:
        casez_tmp_0 = _empty_master_out_io_axi4_rresp;	// @[playground/src/XBar.scala:17:32, :22:13, :32:19, :34:32, :53:17, :59:17]
    endcase	// @[playground/src/XBar.scala:22:13, :27:24, :32:19, :34:32, :53:17, :59:17]
  end // always_comb
  wire        _GEN_9 =
    _GEN
      ? io_axi4in_arvalid & ~_GEN_2
      : _GEN_4 ? io_axi4out1_rvalid : _GEN_6 & io_axi4out2_rvalid;	// @[playground/src/XBar.scala:22:13, :32:19, :34:32, :35:116, :40:111, :43:27, :44:28, :53:17, :59:17]
  always_comb begin	// @[playground/src/XBar.scala:22:13, :32:19, :53:17, :59:17]
    casez (state_r)	// @[playground/src/XBar.scala:22:13, :27:24, :32:19, :53:17, :59:17]
      2'b00:
        casez_tmp_1 = _empty_master_out_io_axi4_bresp;	// @[playground/src/XBar.scala:17:32, :22:13, :32:19, :53:17, :59:17]
      2'b01:
        casez_tmp_1 = io_axi4out1_bresp;	// @[playground/src/XBar.scala:22:13, :32:19, :53:17, :59:17]
      2'b10:
        casez_tmp_1 = 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:22:13, :32:19, :53:17, :59:17]
      default:
        casez_tmp_1 = _empty_master_out_io_axi4_bresp;	// @[playground/src/XBar.scala:17:32, :22:13, :32:19, :53:17, :59:17]
    endcase	// @[playground/src/XBar.scala:22:13, :27:24, :32:19, :53:17, :59:17]
  end // always_comb
  wire        _GEN_10 = state_w == 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:30:24, :66:19]
  wire        _GEN_11 = io_axi4in_awaddr[31] & {32'h0, io_axi4in_awaddr} < 64'h88000000;	// @[playground/src/XBar.scala:35:{31,94}, :70:{32,54,74}]
  wire        _GEN_12 = io_axi4in_awaddr == 32'hA00003F8;	// @[playground/src/XBar.scala:72:38]
  wire        _GEN_13 = _GEN_11 | _GEN_12;	// @[playground/src/XBar.scala:32:19, :70:{54,117}, :72:{38,65}, :77:27]
  `ifndef SYNTHESIS	// @[playground/src/XBar.scala:45:17]
    wire _GEN_14 = _GEN & io_axi4in_arvalid & ~_GEN_0 & ~_GEN_1 & ~reset;	// @[playground/src/XBar.scala:32:19, :35:{53,116}, :40:{60,111}, :45:17]
    always @(posedge clock) begin	// @[playground/src/XBar.scala:45:17]
      if ((`PRINTF_COND_) & _GEN_14)	// @[playground/src/XBar.scala:45:17]
        $fwrite(32'h80000002, "decerr r %x\n", io_axi4in_araddr);	// @[playground/src/XBar.scala:45:17]
      if ((`STOP_COND_) & _GEN_14)	// @[playground/src/XBar.scala:45:17, :46:15]
        $finish;	// @[playground/src/XBar.scala:46:15]
      if ((`PRINTF_COND_) & _GEN_10 & io_axi4in_awvalid & ~_GEN_11 & ~_GEN_12 & ~reset)	// @[playground/src/XBar.scala:45:17, :66:19, :70:{54,117}, :72:{38,65}, :78:17]
        $fwrite(32'h80000002, "decerr w addr=%x\n", io_axi4in_awaddr);	// @[playground/src/XBar.scala:45:17, :78:17]
    end // always @(posedge)
  `endif // not def SYNTHESIS
  wire        _GEN_15 = state_w == 2'h1;	// @[<stdin>:851:10, playground/src/XBar.scala:30:24, :66:19]
  wire        _GEN_16 = _GEN_15 | ~_GEN_5;	// @[playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  wire        _GEN_17 = ~_GEN & _GEN_4;	// @[playground/src/XBar.scala:20:15, :32:19]
  wire        _GEN_18 = _GEN_15 | _GEN_17;	// @[playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  wire        _GEN_19 = state_w == 2'h2;	// @[<stdin>:851:10, playground/src/XBar.scala:30:24, :66:19]
  always_comb begin	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
    casez (state_w)	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
      2'b00:
        casez_tmp_2 = casez_tmp;	// @[playground/src/XBar.scala:32:19, :34:32, :66:19, :85:17, :91:17]
      2'b01:
        casez_tmp_2 = io_axi4out1_rdata;	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      2'b10:
        casez_tmp_2 = 64'h0;	// @[playground/src/XBar.scala:6:14, :14:31, :32:19, :66:19, :85:17, :91:17]
      default:
        casez_tmp_2 = casez_tmp;	// @[playground/src/XBar.scala:32:19, :34:32, :66:19, :85:17, :91:17]
    endcase	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
  end // always_comb
  always_comb begin	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
    casez (state_w)	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
      2'b00:
        casez_tmp_3 = casez_tmp_0;	// @[playground/src/XBar.scala:32:19, :34:32, :66:19, :85:17, :91:17]
      2'b01:
        casez_tmp_3 = 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      2'b10:
        casez_tmp_3 = 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      default:
        casez_tmp_3 = casez_tmp_0;	// @[playground/src/XBar.scala:32:19, :34:32, :66:19, :85:17, :91:17]
    endcase	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
  end // always_comb
  wire        _io_axi4in_rvalid_output =
    _GEN_10 ? _GEN_9 : _GEN_15 ? io_axi4out1_rvalid : ~_GEN_19 & _GEN_9;	// @[playground/src/XBar.scala:32:19, :34:32, :66:19, :85:17, :91:17]
  wire        _GEN_20 = _GEN_10 | _GEN_15;	// @[playground/src/XBar.scala:19:15, :66:19]
  wire        _GEN_21 = ~_GEN & _GEN_4 & io_axi4out1_awready;	// @[playground/src/XBar.scala:20:15, :22:13, :32:19]
  always_comb begin	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
    casez (state_w)	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
      2'b00:
        casez_tmp_4 = _GEN_21;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :85:17, :91:17]
      2'b01:
        casez_tmp_4 = io_axi4out1_awready;	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      2'b10:
        casez_tmp_4 = io_axi4out0_awready;	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      default:
        casez_tmp_4 = _GEN_21;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :85:17, :91:17]
    endcase	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
  end // always_comb
  wire        _GEN_22 = ~_GEN & _GEN_4 & io_axi4out1_wready;	// @[playground/src/XBar.scala:20:15, :22:13, :32:19]
  always_comb begin	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
    casez (state_w)	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
      2'b00:
        casez_tmp_5 = _GEN_22;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :85:17, :91:17]
      2'b01:
        casez_tmp_5 = io_axi4out1_wready;	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      2'b10:
        casez_tmp_5 = io_axi4out0_wready;	// @[playground/src/XBar.scala:32:19, :66:19, :85:17, :91:17]
      default:
        casez_tmp_5 = _GEN_22;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :85:17, :91:17]
    endcase	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :85:17, :91:17]
  end // always_comb
  always_comb begin	// @[playground/src/XBar.scala:32:19, :66:19, :68:32, :85:17, :91:17]
    casez (state_w)	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :68:32, :85:17, :91:17]
      2'b00:
        casez_tmp_6 = ~io_axi4in_awvalid | _GEN_13 ? casez_tmp_1 : 2'h3;	// @[<stdin>:851:10, playground/src/XBar.scala:22:13, :32:19, :66:19, :68:32, :70:117, :72:65, :77:27, :85:17, :91:17]
      2'b01:
        casez_tmp_6 = io_axi4out1_bresp;	// @[playground/src/XBar.scala:32:19, :66:19, :68:32, :85:17, :91:17]
      2'b10:
        casez_tmp_6 = io_axi4out0_bresp;	// @[playground/src/XBar.scala:32:19, :66:19, :68:32, :85:17, :91:17]
      default:
        casez_tmp_6 = casez_tmp_1;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :68:32, :85:17, :91:17]
    endcase	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :68:32, :85:17, :91:17]
  end // always_comb
  wire        _GEN_23 = ~_GEN & _GEN_4 & io_axi4out1_bvalid;	// @[playground/src/XBar.scala:20:15, :22:13, :32:19]
  always_comb begin	// @[playground/src/XBar.scala:32:19, :66:19, :68:32, :85:17, :91:17]
    casez (state_w)	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :68:32, :85:17, :91:17]
      2'b00:
        casez_tmp_7 = io_axi4in_awvalid & ~_GEN_13 | _GEN_23;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :68:32, :70:117, :72:65, :77:27, :79:28, :85:17, :91:17]
      2'b01:
        casez_tmp_7 = io_axi4out1_bvalid;	// @[playground/src/XBar.scala:32:19, :66:19, :68:32, :85:17, :91:17]
      2'b10:
        casez_tmp_7 = io_axi4out0_bvalid;	// @[playground/src/XBar.scala:32:19, :66:19, :68:32, :85:17, :91:17]
      default:
        casez_tmp_7 = _GEN_23;	// @[playground/src/XBar.scala:22:13, :32:19, :66:19, :68:32, :85:17, :91:17]
    endcase	// @[playground/src/XBar.scala:30:24, :32:19, :66:19, :68:32, :85:17, :91:17]
  end // always_comb
  always @(posedge clock) begin	// @[<stdin>:852:11]
    if (reset) begin	// @[<stdin>:852:11]
      state_r <= 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:27:24]
      state_w <= 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:30:24]
    end
    else begin	// @[<stdin>:852:11]
      if (_GEN) begin	// @[playground/src/XBar.scala:32:19]
        if (io_axi4in_arvalid) begin	// @[playground/src/XBar.scala:6:14]
          if (_GEN_0)	// @[playground/src/XBar.scala:35:53]
            state_r <= 2'h1;	// @[<stdin>:851:10, playground/src/XBar.scala:27:24]
          else	// @[playground/src/XBar.scala:35:53]
            state_r <= {_GEN_1, 1'h0};	// @[playground/src/XBar.scala:6:14, :14:31, :16:31, :27:24, :40:{60,111}, :41:19, :48:19]
        end
      end
      else if ((_GEN_4 | _GEN_6) & io_axi4in_rready & _io_axi4in_rvalid_output)	// @[playground/src/XBar.scala:27:24, :32:19, :54:50, :55:17, :60:50, :61:17, :66:19]
        state_r <= 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:27:24]
      if (_GEN_10) begin	// @[playground/src/XBar.scala:66:19]
        if (io_axi4in_awvalid) begin	// @[playground/src/XBar.scala:6:14]
          if (_GEN_11)	// @[playground/src/XBar.scala:70:54]
            state_w <= 2'h1;	// @[<stdin>:851:10, playground/src/XBar.scala:30:24]
          else	// @[playground/src/XBar.scala:70:54]
            state_w <= {_GEN_12, 1'h0};	// @[playground/src/XBar.scala:6:14, :14:31, :16:31, :30:24, :72:{38,65}, :74:19, :80:19]
        end
      end
      else if ((_GEN_15 | _GEN_19) & casez_tmp_7 & io_axi4in_bready)	// @[playground/src/XBar.scala:30:24, :66:19, :68:32, :86:50, :87:17, :92:50, :93:17]
        state_w <= 2'h0;	// @[<stdin>:851:10, playground/src/XBar.scala:30:24]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:851:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:851:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:851:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:2];	// @[<stdin>:851:10]
    initial begin	// @[<stdin>:851:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:851:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:851:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:851:10]
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// @[<stdin>:851:10]
        end	// @[<stdin>:851:10]
        state_r = _RANDOM[2'h2][1:0];	// @[<stdin>:851:10, playground/src/XBar.scala:27:24]
        state_w = _RANDOM[2'h2][3:2];	// @[<stdin>:851:10, playground/src/XBar.scala:27:24, :30:24]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:851:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:851:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  empty_axi4_master empty_slave_in0 (	// @[playground/src/XBar.scala:14:31]
    .io_axi4_araddr (/* unused */),
    .io_axi4_awaddr (/* unused */),
    .io_axi4_wdata  (_empty_slave_in0_io_axi4_wdata),
    .io_axi4_wstrb  (/* unused */)
  );
  empty_axi4_master empty_slave_in1 (	// @[playground/src/XBar.scala:15:31]
    .io_axi4_araddr (_empty_slave_in1_io_axi4_araddr),
    .io_axi4_awaddr (_empty_slave_in1_io_axi4_awaddr),
    .io_axi4_wdata  (_empty_slave_in1_io_axi4_wdata),
    .io_axi4_wstrb  (_empty_slave_in1_io_axi4_wstrb)
  );
  empty_axi4_master empty_slave_in2 (	// @[playground/src/XBar.scala:16:31]
    .io_axi4_araddr (_empty_slave_in2_io_axi4_araddr),
    .io_axi4_awaddr (/* unused */),
    .io_axi4_wdata  (/* unused */),
    .io_axi4_wstrb  (/* unused */)
  );
  empty_axi4_slave empty_master_out (	// @[playground/src/XBar.scala:17:32]
    .io_axi4_rdata (_empty_master_out_io_axi4_rdata),
    .io_axi4_rresp (_empty_master_out_io_axi4_rresp),
    .io_axi4_bresp (_empty_master_out_io_axi4_bresp)
  );
  assign io_axi4in_arready =
    _GEN_10 ? _GEN_8 : _GEN_15 ? io_axi4out1_arready : ~_GEN_19 & _GEN_8;	// @[<stdin>:851:10, playground/src/XBar.scala:22:13, :32:19, :66:19, :85:17, :91:17]
  assign io_axi4in_rdata = casez_tmp_2;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19]
  assign io_axi4in_rresp = casez_tmp_3;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19]
  assign io_axi4in_rvalid = _io_axi4in_rvalid_output;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19]
  assign io_axi4in_awready = casez_tmp_4;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19]
  assign io_axi4in_wready = casez_tmp_5;	// @[<stdin>:851:10, playground/src/XBar.scala:32:19, :66:19]
  assign io_axi4in_bresp = casez_tmp_6;	// @[<stdin>:851:10, playground/src/XBar.scala:66:19, :68:32]
  assign io_axi4in_bvalid = casez_tmp_7;	// @[<stdin>:851:10, playground/src/XBar.scala:66:19, :68:32]
  assign io_axi4out0_awvalid = ~_GEN_20 & _GEN_19 & io_axi4in_awvalid;	// @[<stdin>:851:10, playground/src/XBar.scala:19:15, :66:19]
  assign io_axi4out0_wdata =
    _GEN_20 | ~_GEN_19 ? _empty_slave_in0_io_axi4_wdata : io_axi4in_wdata;	// @[<stdin>:851:10, playground/src/XBar.scala:14:31, :19:15, :32:19, :66:19, :91:17]
  assign io_axi4out0_wvalid = ~_GEN_20 & _GEN_19 & io_axi4in_wvalid;	// @[<stdin>:851:10, playground/src/XBar.scala:19:15, :66:19]
  assign io_axi4out0_bready = ~_GEN_20 & _GEN_19 & io_axi4in_bready;	// @[<stdin>:851:10, playground/src/XBar.scala:19:15, :66:19]
  assign io_axi4out1_araddr =
    _GEN_10
      ? (_GEN_5 ? _empty_slave_in1_io_axi4_araddr : io_axi4in_araddr)
      : _GEN_16 ? io_axi4in_araddr : _empty_slave_in1_io_axi4_araddr;	// @[<stdin>:851:10, playground/src/XBar.scala:15:31, :20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_arvalid =
    _GEN_10 ? _GEN_17 & io_axi4in_arvalid : _GEN_18 & io_axi4in_arvalid;	// @[<stdin>:851:10, playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_rready =
    _GEN_10 ? _GEN_17 & io_axi4in_rready : _GEN_18 & io_axi4in_rready;	// @[<stdin>:851:10, playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_awaddr =
    _GEN_10
      ? (_GEN_5 ? _empty_slave_in1_io_axi4_awaddr : io_axi4in_awaddr)
      : _GEN_16 ? io_axi4in_awaddr : _empty_slave_in1_io_axi4_awaddr;	// @[<stdin>:851:10, playground/src/XBar.scala:15:31, :20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_awvalid =
    _GEN_10 ? _GEN_17 & io_axi4in_awvalid : _GEN_18 & io_axi4in_awvalid;	// @[<stdin>:851:10, playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_wdata =
    _GEN_10
      ? (_GEN_5 ? _empty_slave_in1_io_axi4_wdata : io_axi4in_wdata)
      : _GEN_16 ? io_axi4in_wdata : _empty_slave_in1_io_axi4_wdata;	// @[<stdin>:851:10, playground/src/XBar.scala:15:31, :20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_wstrb =
    _GEN_10
      ? (_GEN_5 ? _empty_slave_in1_io_axi4_wstrb : io_axi4in_wstrb)
      : _GEN_16 ? io_axi4in_wstrb : _empty_slave_in1_io_axi4_wstrb;	// @[<stdin>:851:10, playground/src/XBar.scala:15:31, :20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_wvalid =
    _GEN_10 ? _GEN_17 & io_axi4in_wvalid : _GEN_18 & io_axi4in_wvalid;	// @[<stdin>:851:10, playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  assign io_axi4out1_bready =
    _GEN_10 ? _GEN_17 & io_axi4in_bready : _GEN_18 & io_axi4in_bready;	// @[<stdin>:851:10, playground/src/XBar.scala:20:15, :32:19, :66:19, :85:17]
  assign io_axi4out2_araddr =
    _GEN_7 | ~_GEN_6 ? _empty_slave_in2_io_axi4_araddr : io_axi4in_araddr;	// @[<stdin>:851:10, playground/src/XBar.scala:16:31, :21:15, :32:19]
  assign io_axi4out2_arvalid = ~_GEN_7 & _GEN_6 & io_axi4in_arvalid;	// @[<stdin>:851:10, playground/src/XBar.scala:21:15, :32:19]
  assign io_axi4out2_rready = ~_GEN_7 & _GEN_6 & io_axi4in_rready;	// @[<stdin>:851:10, playground/src/XBar.scala:21:15, :32:19]
endmodule

