// Generated by CIRCT firtool-1.44.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module MyArbiter(	// @[<stdin>:141:10]
  input         clock,	// @[<stdin>:142:11]
                reset,	// @[<stdin>:143:11]
  input  [31:0] io_ifu_bus_axi4_araddr,	// @[playground/src/Arbiter.scala:13:14]
  input         io_ifu_bus_axi4_arvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_ifu_bus_axi4_rready,	// @[playground/src/Arbiter.scala:13:14]
                io_ifu_bus_bus_reqr,	// @[playground/src/Arbiter.scala:13:14]
  input  [31:0] io_lsu_bus_axi4_araddr,	// @[playground/src/Arbiter.scala:13:14]
  input         io_lsu_bus_axi4_arvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_axi4_rready,	// @[playground/src/Arbiter.scala:13:14]
  input  [31:0] io_lsu_bus_axi4_awaddr,	// @[playground/src/Arbiter.scala:13:14]
  input         io_lsu_bus_axi4_awvalid,	// @[playground/src/Arbiter.scala:13:14]
  input  [63:0] io_lsu_bus_axi4_wdata,	// @[playground/src/Arbiter.scala:13:14]
  input  [7:0]  io_lsu_bus_axi4_wstrb,	// @[playground/src/Arbiter.scala:13:14]
  input         io_lsu_bus_axi4_wvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_axi4_bready,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_bus_reqr,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_bus_reqw,	// @[playground/src/Arbiter.scala:13:14]
                io_xbar_bus_arready,	// @[playground/src/Arbiter.scala:13:14]
  input  [63:0] io_xbar_bus_rdata,	// @[playground/src/Arbiter.scala:13:14]
  input  [1:0]  io_xbar_bus_rresp,	// @[playground/src/Arbiter.scala:13:14]
  input         io_xbar_bus_rvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_xbar_bus_awready,	// @[playground/src/Arbiter.scala:13:14]
                io_xbar_bus_wready,	// @[playground/src/Arbiter.scala:13:14]
  input  [1:0]  io_xbar_bus_bresp,	// @[playground/src/Arbiter.scala:13:14]
  input         io_xbar_bus_bvalid,	// @[playground/src/Arbiter.scala:13:14]
  output        io_ifu_bus_axi4_arready,	// @[playground/src/Arbiter.scala:13:14]
  output [63:0] io_ifu_bus_axi4_rdata,	// @[playground/src/Arbiter.scala:13:14]
  output [1:0]  io_ifu_bus_axi4_rresp,	// @[playground/src/Arbiter.scala:13:14]
  output        io_ifu_bus_axi4_rvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_ifu_bus_bus_ac,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_axi4_arready,	// @[playground/src/Arbiter.scala:13:14]
  output [63:0] io_lsu_bus_axi4_rdata,	// @[playground/src/Arbiter.scala:13:14]
  output [1:0]  io_lsu_bus_axi4_rresp,	// @[playground/src/Arbiter.scala:13:14]
  output        io_lsu_bus_axi4_rvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_axi4_awready,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_axi4_wready,	// @[playground/src/Arbiter.scala:13:14]
  output [1:0]  io_lsu_bus_axi4_bresp,	// @[playground/src/Arbiter.scala:13:14]
  output        io_lsu_bus_axi4_bvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_lsu_bus_bus_ac,	// @[playground/src/Arbiter.scala:13:14]
  output [31:0] io_xbar_bus_araddr,	// @[playground/src/Arbiter.scala:13:14]
  output        io_xbar_bus_arvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_xbar_bus_rready,	// @[playground/src/Arbiter.scala:13:14]
  output [31:0] io_xbar_bus_awaddr,	// @[playground/src/Arbiter.scala:13:14]
  output        io_xbar_bus_awvalid,	// @[playground/src/Arbiter.scala:13:14]
  output [63:0] io_xbar_bus_wdata,	// @[playground/src/Arbiter.scala:13:14]
  output [7:0]  io_xbar_bus_wstrb,	// @[playground/src/Arbiter.scala:13:14]
  output        io_xbar_bus_wvalid,	// @[playground/src/Arbiter.scala:13:14]
                io_xbar_bus_bready	// @[playground/src/Arbiter.scala:13:14]
);

  wire [31:0] _empty_xbar_bus_io_axi4_araddr;	// @[playground/src/Arbiter.scala:21:30]
  wire [31:0] _empty_xbar_bus_io_axi4_awaddr;	// @[playground/src/Arbiter.scala:21:30]
  wire [63:0] _empty_xbar_bus_io_axi4_wdata;	// @[playground/src/Arbiter.scala:21:30]
  wire [7:0]  _empty_xbar_bus_io_axi4_wstrb;	// @[playground/src/Arbiter.scala:21:30]
  wire [63:0] _empty_axi4_lsu_io_axi4_rdata;	// @[playground/src/Arbiter.scala:20:30]
  wire [1:0]  _empty_axi4_lsu_io_axi4_rresp;	// @[playground/src/Arbiter.scala:20:30]
  wire [1:0]  _empty_axi4_lsu_io_axi4_bresp;	// @[playground/src/Arbiter.scala:20:30]
  wire [63:0] _empty_axi4_ifu_io_axi4_rdata;	// @[playground/src/Arbiter.scala:19:30]
  wire [1:0]  _empty_axi4_ifu_io_axi4_rresp;	// @[playground/src/Arbiter.scala:19:30]
  reg  [1:0]  casez_tmp;	// @[playground/src/Arbiter.scala:39:29, :40:21, :43:36]
  reg  [63:0] casez_tmp_0;	// @[playground/src/Arbiter.scala:39:29, :40:21, :43:36]
  reg  [31:0] casez_tmp_1;	// @[playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  reg  [31:0] casez_tmp_2;	// @[playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  reg  [63:0] casez_tmp_3;	// @[playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  reg  [7:0]  casez_tmp_4;	// @[playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  reg         casez_tmp_5;	// @[playground/src/Arbiter.scala:56:17, :58:33]
  reg  [1:0]  state;	// @[playground/src/Arbiter.scala:27:22]
  reg         ifu_ac;	// @[playground/src/Arbiter.scala:29:23]
  reg         lsu_ac;	// @[playground/src/Arbiter.scala:30:23]
  wire        _GEN = state == 2'h0;	// @[playground/src/Arbiter.scala:27:22, :39:14]
  wire        _GEN_0 = state == 2'h1;	// @[playground/src/Arbiter.scala:27:22, :43:21]
  wire        _GEN_1 = state == 2'h2;	// @[playground/src/Arbiter.scala:27:22, :46:21]
  wire        _GEN_2 = _GEN_1 | (&state);	// @[playground/src/Arbiter.scala:27:22, :46:{21,35,44}]
  wire        _io_ifu_bus_axi4_rvalid_output = ~_GEN & _GEN_0 & io_xbar_bus_rvalid;	// @[playground/src/Arbiter.scala:39:{14,29}, :40:21, :43:{21,36}]
  always_comb begin	// @[playground/src/Arbiter.scala:39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      2'b00:
        casez_tmp = _empty_axi4_ifu_io_axi4_rresp;	// @[playground/src/Arbiter.scala:19:30, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      2'b01:
        casez_tmp = io_xbar_bus_rresp;	// @[playground/src/Arbiter.scala:39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      2'b10:
        casez_tmp = _empty_axi4_lsu_io_axi4_rresp;	// @[playground/src/Arbiter.scala:20:30, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      default:
        casez_tmp = _empty_axi4_lsu_io_axi4_rresp;	// @[playground/src/Arbiter.scala:20:30, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
    endcase	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
  end // always_comb
  always_comb begin	// @[playground/src/Arbiter.scala:39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      2'b00:
        casez_tmp_0 = _empty_axi4_ifu_io_axi4_rdata;	// @[playground/src/Arbiter.scala:19:30, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      2'b01:
        casez_tmp_0 = io_xbar_bus_rdata;	// @[playground/src/Arbiter.scala:39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      2'b10:
        casez_tmp_0 = _empty_axi4_lsu_io_axi4_rdata;	// @[playground/src/Arbiter.scala:20:30, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
      default:
        casez_tmp_0 = _empty_axi4_lsu_io_axi4_rdata;	// @[playground/src/Arbiter.scala:20:30, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
    endcase	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :40:21, :43:{21,36}, :44:21, :46:{35,59}, :48:21, :50:21]
  end // always_comb
  wire        _GEN_3 = _GEN | _GEN_0;	// @[playground/src/Arbiter.scala:39:{14,29}, :41:21, :43:{21,36}, :45:21, :46:59]
  wire        _io_lsu_bus_axi4_bvalid_output = ~_GEN_3 & _GEN_2 & io_xbar_bus_bvalid;	// @[playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:{35,59}]
  wire        _GEN_4 = _GEN_3 | ~_GEN_2;	// @[playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:{35,59}]
  wire        _io_lsu_bus_axi4_rvalid_output = ~_GEN_3 & _GEN_2 & io_xbar_bus_rvalid;	// @[playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:{35,59}]
  always_comb begin	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b00:
        casez_tmp_1 = _empty_xbar_bus_io_axi4_araddr;	// @[playground/src/Arbiter.scala:21:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b01:
        casez_tmp_1 = io_ifu_bus_axi4_araddr;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b10:
        casez_tmp_1 = io_lsu_bus_axi4_araddr;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      default:
        casez_tmp_1 = io_lsu_bus_axi4_araddr;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    endcase	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
  end // always_comb
  always_comb begin	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b00:
        casez_tmp_2 = _empty_xbar_bus_io_axi4_awaddr;	// @[playground/src/Arbiter.scala:21:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b01:
        casez_tmp_2 = 32'h0;	// @[playground/src/Arbiter.scala:13:14, :19:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b10:
        casez_tmp_2 = io_lsu_bus_axi4_awaddr;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      default:
        casez_tmp_2 = io_lsu_bus_axi4_awaddr;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    endcase	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
  end // always_comb
  always_comb begin	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b00:
        casez_tmp_3 = _empty_xbar_bus_io_axi4_wdata;	// @[playground/src/Arbiter.scala:21:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b01:
        casez_tmp_3 = 64'h0;	// @[playground/src/Arbiter.scala:13:14, :19:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b10:
        casez_tmp_3 = io_lsu_bus_axi4_wdata;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      default:
        casez_tmp_3 = io_lsu_bus_axi4_wdata;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    endcase	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
  end // always_comb
  always_comb begin	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b00:
        casez_tmp_4 = _empty_xbar_bus_io_axi4_wstrb;	// @[playground/src/Arbiter.scala:21:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b01:
        casez_tmp_4 = 8'h0;	// @[playground/src/Arbiter.scala:13:14, :19:30, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      2'b10:
        casez_tmp_4 = io_lsu_bus_axi4_wstrb;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
      default:
        casez_tmp_4 = io_lsu_bus_axi4_wstrb;	// @[playground/src/Arbiter.scala:39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
    endcase	// @[playground/src/Arbiter.scala:27:22, :39:{14,29}, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
  end // always_comb
  wire        _GEN_5 = io_lsu_bus_axi4_rready & _io_lsu_bus_axi4_rvalid_output;	// @[playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:59, :81:35]
  wire        _GEN_6 = (&state) & io_lsu_bus_axi4_bready & _io_lsu_bus_axi4_bvalid_output;	// @[playground/src/Arbiter.scala:27:22, :39:29, :41:21, :43:36, :45:21, :46:{44,59}, :56:17, :88:61, :89:15]
  always_comb begin	// @[playground/src/Arbiter.scala:30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :81:61]
    casez (state)	// @[playground/src/Arbiter.scala:27:22, :30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :81:61]
      2'b00:
        casez_tmp_5 =
          ~io_ifu_bus_bus_reqr & (io_lsu_bus_bus_reqr | io_lsu_bus_bus_reqw) | lsu_ac;	// @[playground/src/Arbiter.scala:30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :62:39, :64:16, :66:39, :68:16, :81:61]
      2'b01:
        casez_tmp_5 = lsu_ac;	// @[playground/src/Arbiter.scala:30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :81:61]
      2'b10:
        casez_tmp_5 = ~_GEN_5 & lsu_ac;	// @[playground/src/Arbiter.scala:30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :81:{35,61}, :83:16]
      default:
        casez_tmp_5 = ~_GEN_6 & lsu_ac;	// @[playground/src/Arbiter.scala:27:22, :30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :81:61, :88:61, :89:15, :90:16]
    endcase	// @[playground/src/Arbiter.scala:27:22, :30:23, :39:14, :43:21, :46:21, :56:17, :58:33, :81:61]
  end // always_comb
  wire        _GEN_7 = io_ifu_bus_axi4_rready & _io_ifu_bus_axi4_rvalid_output;	// @[playground/src/Arbiter.scala:39:29, :40:21, :43:36, :73:35]
  always @(posedge clock) begin	// @[<stdin>:142:11]
    if (reset) begin	// @[<stdin>:142:11]
      state <= 2'h0;	// @[playground/src/Arbiter.scala:27:22]
      ifu_ac <= 1'h0;	// @[<stdin>:141:10, playground/src/Arbiter.scala:29:23]
      lsu_ac <= 1'h0;	// @[<stdin>:141:10, playground/src/Arbiter.scala:30:23]
    end
    else begin	// @[<stdin>:142:11]
      if (_GEN) begin	// @[playground/src/Arbiter.scala:39:14]
        if (io_ifu_bus_bus_reqr)	// @[playground/src/Arbiter.scala:13:14]
          state <= 2'h1;	// @[playground/src/Arbiter.scala:27:22, :43:21]
        else if (io_lsu_bus_bus_reqr)	// @[playground/src/Arbiter.scala:13:14]
          state <= 2'h2;	// @[playground/src/Arbiter.scala:27:22, :46:21]
        else if (io_lsu_bus_bus_reqw)	// @[playground/src/Arbiter.scala:13:14]
          state <= 2'h3;	// @[playground/src/Arbiter.scala:27:22, :46:44]
        ifu_ac <= io_ifu_bus_bus_reqr | ifu_ac;	// @[playground/src/Arbiter.scala:29:23, :58:33, :60:16]
      end
      else begin	// @[playground/src/Arbiter.scala:39:14]
        if (_GEN_0 ? _GEN_7 : _GEN_1 ? _GEN_5 : _GEN_6)	// @[playground/src/Arbiter.scala:27:22, :43:21, :46:21, :56:17, :73:{35,61}, :75:15, :81:{35,61}, :82:15, :88:61, :89:15]
          state <= 2'h0;	// @[playground/src/Arbiter.scala:27:22]
        ifu_ac <= ~(_GEN_0 & _GEN_7) & ifu_ac;	// @[playground/src/Arbiter.scala:29:23, :43:21, :56:17, :73:{35,61}, :76:16]
      end
      lsu_ac <= casez_tmp_5;	// @[playground/src/Arbiter.scala:30:23, :56:17, :58:33]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:141:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:141:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:141:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:0];	// @[<stdin>:141:10]
    initial begin	// @[<stdin>:141:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:141:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:141:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:141:10]
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// @[<stdin>:141:10]
        state = _RANDOM[/*Zero width*/ 1'b0][1:0];	// @[<stdin>:141:10, playground/src/Arbiter.scala:27:22]
        ifu_ac = _RANDOM[/*Zero width*/ 1'b0][2];	// @[<stdin>:141:10, playground/src/Arbiter.scala:27:22, :29:23]
        lsu_ac = _RANDOM[/*Zero width*/ 1'b0][3];	// @[<stdin>:141:10, playground/src/Arbiter.scala:27:22, :30:23]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:141:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:141:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  empty_axi4_slave empty_axi4_ifu (	// @[playground/src/Arbiter.scala:19:30]
    .io_axi4_rdata (_empty_axi4_ifu_io_axi4_rdata),
    .io_axi4_rresp (_empty_axi4_ifu_io_axi4_rresp),
    .io_axi4_bresp (/* unused */)
  );
  empty_axi4_slave empty_axi4_lsu (	// @[playground/src/Arbiter.scala:20:30]
    .io_axi4_rdata (_empty_axi4_lsu_io_axi4_rdata),
    .io_axi4_rresp (_empty_axi4_lsu_io_axi4_rresp),
    .io_axi4_bresp (_empty_axi4_lsu_io_axi4_bresp)
  );
  empty_axi4_master empty_xbar_bus (	// @[playground/src/Arbiter.scala:21:30]
    .io_axi4_araddr (_empty_xbar_bus_io_axi4_araddr),
    .io_axi4_awaddr (_empty_xbar_bus_io_axi4_awaddr),
    .io_axi4_wdata  (_empty_xbar_bus_io_axi4_wdata),
    .io_axi4_wstrb  (_empty_xbar_bus_io_axi4_wstrb)
  );
  assign io_ifu_bus_axi4_arready = ~_GEN & _GEN_0 & io_xbar_bus_arready;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:{14,29}, :40:21, :43:{21,36}]
  assign io_ifu_bus_axi4_rdata = casez_tmp_0;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :40:21, :43:36]
  assign io_ifu_bus_axi4_rresp = casez_tmp;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :40:21, :43:36]
  assign io_ifu_bus_axi4_rvalid = _io_ifu_bus_axi4_rvalid_output;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :40:21, :43:36]
  assign io_ifu_bus_bus_ac = ifu_ac;	// @[<stdin>:141:10, playground/src/Arbiter.scala:29:23]
  assign io_lsu_bus_axi4_arready = ~_GEN_3 & _GEN_2 & io_xbar_bus_arready;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:{35,59}]
  assign io_lsu_bus_axi4_rdata =
    _GEN_4 ? _empty_axi4_lsu_io_axi4_rdata : io_xbar_bus_rdata;	// @[<stdin>:141:10, playground/src/Arbiter.scala:20:30, :39:29, :41:21, :43:36, :45:21, :46:59]
  assign io_lsu_bus_axi4_rresp =
    _GEN_4 ? _empty_axi4_lsu_io_axi4_rresp : io_xbar_bus_rresp;	// @[<stdin>:141:10, playground/src/Arbiter.scala:20:30, :39:29, :41:21, :43:36, :45:21, :46:59]
  assign io_lsu_bus_axi4_rvalid = _io_lsu_bus_axi4_rvalid_output;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:59]
  assign io_lsu_bus_axi4_awready = ~_GEN_3 & _GEN_2 & io_xbar_bus_awready;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:{35,59}]
  assign io_lsu_bus_axi4_wready = ~_GEN_3 & _GEN_2 & io_xbar_bus_wready;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:{35,59}]
  assign io_lsu_bus_axi4_bresp =
    _GEN_4 ? _empty_axi4_lsu_io_axi4_bresp : io_xbar_bus_bresp;	// @[<stdin>:141:10, playground/src/Arbiter.scala:20:30, :39:29, :41:21, :43:36, :45:21, :46:59]
  assign io_lsu_bus_axi4_bvalid = _io_lsu_bus_axi4_bvalid_output;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :41:21, :43:36, :45:21, :46:59]
  assign io_lsu_bus_bus_ac = lsu_ac;	// @[<stdin>:141:10, playground/src/Arbiter.scala:30:23]
  assign io_xbar_bus_araddr = casez_tmp_1;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  assign io_xbar_bus_arvalid =
    ~_GEN & (_GEN_0 ? io_ifu_bus_axi4_arvalid : _GEN_2 & io_lsu_bus_axi4_arvalid);	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:{14,29}, :40:21, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
  assign io_xbar_bus_rready =
    ~_GEN & (_GEN_0 ? io_ifu_bus_axi4_rready : _GEN_2 & io_lsu_bus_axi4_rready);	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:{14,29}, :40:21, :42:17, :43:{21,36}, :44:21, :46:{35,59}, :47:21, :52:17]
  assign io_xbar_bus_awaddr = casez_tmp_2;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  assign io_xbar_bus_awvalid = ~_GEN & ~_GEN_0 & _GEN_2 & io_lsu_bus_axi4_awvalid;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:{14,29}, :40:21, :42:17, :43:{21,36}, :44:21, :46:{35,59}]
  assign io_xbar_bus_wdata = casez_tmp_3;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  assign io_xbar_bus_wstrb = casez_tmp_4;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:29, :42:17, :43:36]
  assign io_xbar_bus_wvalid = ~_GEN & ~_GEN_0 & _GEN_2 & io_lsu_bus_axi4_wvalid;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:{14,29}, :40:21, :42:17, :43:{21,36}, :44:21, :46:{35,59}]
  assign io_xbar_bus_bready = ~_GEN & ~_GEN_0 & _GEN_2 & io_lsu_bus_axi4_bready;	// @[<stdin>:141:10, playground/src/Arbiter.scala:39:{14,29}, :40:21, :42:17, :43:{21,36}, :44:21, :46:{35,59}]
endmodule

