// Generated by CIRCT firtool-1.44.0
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

module Top(	// @[<stdin>:3398:10]
  input         clock,	// @[<stdin>:3399:11]
                reset,	// @[<stdin>:3400:11]
  output [31:0] io_inst,	// @[playground/src/Top.scala:82:14]
  output [63:0] io_pc,	// @[playground/src/Top.scala:82:14]
                io_npc	// @[playground/src/Top.scala:82:14]
);

  wire        pcsel;	// @[playground/src/Top.scala:183:23, :552:16, :576:11]
  wire [63:0] ifu_dnpc;	// @[playground/src/Top.scala:552:16, :556:14, :564:14]
  wire        IDRegen;	// @[playground/src/Top.scala:552:16, :554:13, :559:13]
  wire [63:0] _GEN;	// @[playground/src/Top.scala:302:22, :304:19, :308:19]
  wire [31:0] _GEN_0;	// @[playground/src/Top.scala:302:22, :303:21, :307:21]
  wire        _NPC_Mem_io_in_ready;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_out_valid;	// @[playground/src/Top.scala:372:23]
  wire [31:0] _NPC_Mem_io_out_bits_inst;	// @[playground/src/Top.scala:372:23]
  wire [63:0] _NPC_Mem_io_out_bits_pc;	// @[playground/src/Top.scala:372:23]
  wire [63:0] _NPC_Mem_io_out_bits_alures;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_out_bits_memvalid;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_out_bits_rden;	// @[playground/src/Top.scala:372:23]
  wire [4:0]  _NPC_Mem_io_out_bits_rd;	// @[playground/src/Top.scala:372:23]
  wire [11:0] _NPC_Mem_io_out_bits_csridx;	// @[playground/src/Top.scala:372:23]
  wire [63:0] _NPC_Mem_io_out_bits_csrwv;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_out_bits_csr_en;	// @[playground/src/Top.scala:372:23]
  wire [2:0]  _NPC_Mem_io_out_bits_memsext;	// @[playground/src/Top.scala:372:23]
  wire [63:0] _NPC_Mem_io_out_bits_rdata;	// @[playground/src/Top.scala:372:23]
  wire [31:0] _NPC_Mem_io_axi4_to_arbiter_araddr;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_axi4_to_arbiter_arvalid;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_axi4_to_arbiter_rready;	// @[playground/src/Top.scala:372:23]
  wire [31:0] _NPC_Mem_io_axi4_to_arbiter_awaddr;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_axi4_to_arbiter_awvalid;	// @[playground/src/Top.scala:372:23]
  wire [63:0] _NPC_Mem_io_axi4_to_arbiter_wdata;	// @[playground/src/Top.scala:372:23]
  wire [7:0]  _NPC_Mem_io_axi4_to_arbiter_wstrb;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_axi4_to_arbiter_wvalid;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_axi4_to_arbiter_bready;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_bus_reqr;	// @[playground/src/Top.scala:372:23]
  wire        _NPC_Mem_io_bus_reqw;	// @[playground/src/Top.scala:372:23]
  wire [63:0] _ALU_io_res;	// @[playground/src/Top.scala:312:19]
  wire [4:0]  _Decoder_io_rs1;	// @[playground/src/Top.scala:226:23]
  wire [4:0]  _Decoder_io_rs2;	// @[playground/src/Top.scala:226:23]
  wire [4:0]  _Decoder_io_rd;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_rd_en;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_csr_en;	// @[playground/src/Top.scala:226:23]
  wire [63:0] _Decoder_io_imm;	// @[playground/src/Top.scala:226:23]
  wire [4:0]  _Decoder_io_alu_op;	// @[playground/src/Top.scala:226:23]
  wire [2:0]  _Decoder_io_alu_sel_a;	// @[playground/src/Top.scala:226:23]
  wire [2:0]  _Decoder_io_alu_sel_b;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_isEbreak;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_memvalid;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_memwen;	// @[playground/src/Top.scala:226:23]
  wire [7:0]  _Decoder_io_memwmask;	// @[playground/src/Top.scala:226:23]
  wire [2:0]  _Decoder_io_memsext;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_isword;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_rrs1;	// @[playground/src/Top.scala:226:23]
  wire        _Decoder_io_rrs2;	// @[playground/src/Top.scala:226:23]
  wire [63:0] _R_ext_R0_data;	// @[playground/src/Top.scala:186:14]
  wire [63:0] _R_ext_R1_data;	// @[playground/src/Top.scala:186:14]
  wire        _InstFetcher_io_out_valid;	// @[playground/src/Top.scala:184:27]
  wire [63:0] _InstFetcher_io_out_bits_pc;	// @[playground/src/Top.scala:184:27]
  wire [31:0] _InstFetcher_io_out_bits_inst;	// @[playground/src/Top.scala:184:27]
  wire [31:0] _InstFetcher_io_axi4_to_arbiter_araddr;	// @[playground/src/Top.scala:184:27]
  wire        _InstFetcher_io_axi4_to_arbiter_arvalid;	// @[playground/src/Top.scala:184:27]
  wire        _InstFetcher_io_axi4_to_arbiter_rready;	// @[playground/src/Top.scala:184:27]
  wire        _InstFetcher_io_bus_reqr;	// @[playground/src/Top.scala:184:27]
  wire        _MyClint_io_axi4_arready;	// @[playground/src/Top.scala:175:23]
  wire [63:0] _MyClint_io_axi4_rdata;	// @[playground/src/Top.scala:175:23]
  wire        _MyClint_io_axi4_rvalid;	// @[playground/src/Top.scala:175:23]
  wire        _MyUart_io_axi4_awready;	// @[playground/src/Top.scala:174:22]
  wire        _MyUart_io_axi4_wready;	// @[playground/src/Top.scala:174:22]
  wire        _MyUart_io_axi4_bvalid;	// @[playground/src/Top.scala:174:22]
  wire        _XBar2_io_axi4in_arready;	// @[playground/src/Top.scala:173:21]
  wire [63:0] _XBar2_io_axi4in_rdata;	// @[playground/src/Top.scala:173:21]
  wire [1:0]  _XBar2_io_axi4in_rresp;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4in_rvalid;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4in_awready;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4in_wready;	// @[playground/src/Top.scala:173:21]
  wire [1:0]  _XBar2_io_axi4in_bresp;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4in_bvalid;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out0_awvalid;	// @[playground/src/Top.scala:173:21]
  wire [63:0] _XBar2_io_axi4out0_wdata;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out0_wvalid;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out0_bready;	// @[playground/src/Top.scala:173:21]
  wire [31:0] _XBar2_io_axi4out1_araddr;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out1_arvalid;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out1_rready;	// @[playground/src/Top.scala:173:21]
  wire [31:0] _XBar2_io_axi4out1_awaddr;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out1_awvalid;	// @[playground/src/Top.scala:173:21]
  wire [63:0] _XBar2_io_axi4out1_wdata;	// @[playground/src/Top.scala:173:21]
  wire [7:0]  _XBar2_io_axi4out1_wstrb;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out1_wvalid;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out1_bready;	// @[playground/src/Top.scala:173:21]
  wire [31:0] _XBar2_io_axi4out2_araddr;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out2_arvalid;	// @[playground/src/Top.scala:173:21]
  wire        _XBar2_io_axi4out2_rready;	// @[playground/src/Top.scala:173:21]
  wire        _SRAM_io_axi4_arready;	// @[playground/src/Top.scala:171:20]
  wire [63:0] _SRAM_io_axi4_rdata;	// @[playground/src/Top.scala:171:20]
  wire        _SRAM_io_axi4_rvalid;	// @[playground/src/Top.scala:171:20]
  wire        _SRAM_io_axi4_awready;	// @[playground/src/Top.scala:171:20]
  wire        _SRAM_io_axi4_wready;	// @[playground/src/Top.scala:171:20]
  wire        _SRAM_io_axi4_bvalid;	// @[playground/src/Top.scala:171:20]
  wire        _AXI4Arbiter_io_ifu_bus_axi4_arready;	// @[playground/src/Top.scala:170:27]
  wire [63:0] _AXI4Arbiter_io_ifu_bus_axi4_rdata;	// @[playground/src/Top.scala:170:27]
  wire [1:0]  _AXI4Arbiter_io_ifu_bus_axi4_rresp;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_ifu_bus_axi4_rvalid;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_ifu_bus_bus_ac;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_lsu_bus_axi4_arready;	// @[playground/src/Top.scala:170:27]
  wire [63:0] _AXI4Arbiter_io_lsu_bus_axi4_rdata;	// @[playground/src/Top.scala:170:27]
  wire [1:0]  _AXI4Arbiter_io_lsu_bus_axi4_rresp;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_lsu_bus_axi4_rvalid;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_lsu_bus_axi4_awready;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_lsu_bus_axi4_wready;	// @[playground/src/Top.scala:170:27]
  wire [1:0]  _AXI4Arbiter_io_lsu_bus_axi4_bresp;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_lsu_bus_axi4_bvalid;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_lsu_bus_bus_ac;	// @[playground/src/Top.scala:170:27]
  wire [31:0] _AXI4Arbiter_io_xbar_bus_araddr;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_xbar_bus_arvalid;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_xbar_bus_rready;	// @[playground/src/Top.scala:170:27]
  wire [31:0] _AXI4Arbiter_io_xbar_bus_awaddr;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_xbar_bus_awvalid;	// @[playground/src/Top.scala:170:27]
  wire [63:0] _AXI4Arbiter_io_xbar_bus_wdata;	// @[playground/src/Top.scala:170:27]
  wire [7:0]  _AXI4Arbiter_io_xbar_bus_wstrb;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_xbar_bus_wvalid;	// @[playground/src/Top.scala:170:27]
  wire        _AXI4Arbiter_io_xbar_bus_bready;	// @[playground/src/Top.scala:170:27]
  reg  [63:0] casez_tmp;	// @[playground/src/Top.scala:474:51]
  reg         IDReg_valid;	// @[playground/src/Top.scala:90:22]
  reg  [31:0] IDReg_inst;	// @[playground/src/Top.scala:90:22]
  reg  [63:0] IDReg_pc;	// @[playground/src/Top.scala:90:22]
  reg         EXReg_valid;	// @[playground/src/Top.scala:97:22]
  reg  [31:0] EXReg_inst;	// @[playground/src/Top.scala:97:22]
  reg  [63:0] EXReg_pc;	// @[playground/src/Top.scala:97:22]
  reg  [63:0] EXReg_rs1v;	// @[playground/src/Top.scala:97:22]
  reg  [63:0] EXReg_rs2v;	// @[playground/src/Top.scala:97:22]
  reg  [11:0] EXReg_csridx;	// @[playground/src/Top.scala:97:22]
  reg  [63:0] EXReg_csrrv;	// @[playground/src/Top.scala:97:22]
  reg  [63:0] EXReg_csrwv;	// @[playground/src/Top.scala:97:22]
  reg         EXReg_csr_en;	// @[playground/src/Top.scala:97:22]
  reg  [63:0] EXReg_imm;	// @[playground/src/Top.scala:97:22]
  reg  [2:0]  EXReg_dataAsel;	// @[playground/src/Top.scala:97:22]
  reg  [2:0]  EXReg_dataBsel;	// @[playground/src/Top.scala:97:22]
  reg  [4:0]  EXReg_aluop;	// @[playground/src/Top.scala:97:22]
  reg         EXReg_memvalid;	// @[playground/src/Top.scala:97:22]
  reg         EXReg_memwen;	// @[playground/src/Top.scala:97:22]
  reg  [7:0]  EXReg_memwmask;	// @[playground/src/Top.scala:97:22]
  reg  [2:0]  EXReg_memsext;	// @[playground/src/Top.scala:97:22]
  reg         EXReg_isEbreak;	// @[playground/src/Top.scala:97:22]
  reg         EXReg_isword;	// @[playground/src/Top.scala:97:22]
  reg         EXReg_rden;	// @[playground/src/Top.scala:97:22]
  reg  [4:0]  EXReg_rd;	// @[playground/src/Top.scala:97:22]
  reg         LSReg_valid;	// @[playground/src/Top.scala:125:22]
  reg  [31:0] LSReg_inst;	// @[playground/src/Top.scala:125:22]
  reg  [63:0] LSReg_pc;	// @[playground/src/Top.scala:125:22]
  reg  [63:0] LSReg_alures;	// @[playground/src/Top.scala:125:22]
  reg  [63:0] LSReg_rs2v;	// @[playground/src/Top.scala:125:22]
  reg  [11:0] LSReg_csridx;	// @[playground/src/Top.scala:125:22]
  reg  [63:0] LSReg_csrwv;	// @[playground/src/Top.scala:125:22]
  reg         LSReg_csr_en;	// @[playground/src/Top.scala:125:22]
  reg         LSReg_memvalid;	// @[playground/src/Top.scala:125:22]
  reg         LSReg_memwen;	// @[playground/src/Top.scala:125:22]
  reg  [7:0]  LSReg_memwmask;	// @[playground/src/Top.scala:125:22]
  reg  [2:0]  LSReg_memsext;	// @[playground/src/Top.scala:125:22]
  reg         LSReg_rden;	// @[playground/src/Top.scala:125:22]
  reg  [4:0]  LSReg_rd;	// @[playground/src/Top.scala:125:22]
  reg         WBReg_valid;	// @[playground/src/Top.scala:144:22]
  reg  [31:0] WBReg_inst;	// @[playground/src/Top.scala:144:22]
  reg  [63:0] WBReg_pc;	// @[playground/src/Top.scala:144:22]
  reg  [63:0] WBReg_alures;	// @[playground/src/Top.scala:144:22]
  reg  [11:0] WBReg_csridx;	// @[playground/src/Top.scala:144:22]
  reg  [63:0] WBReg_csrwv;	// @[playground/src/Top.scala:144:22]
  reg         WBReg_csr_en;	// @[playground/src/Top.scala:144:22]
  reg         WBReg_rden;	// @[playground/src/Top.scala:144:22]
  reg  [4:0]  WBReg_rd;	// @[playground/src/Top.scala:144:22]
  reg         WBReg_memvalid;	// @[playground/src/Top.scala:144:22]
  reg  [2:0]  WBReg_memsext;	// @[playground/src/Top.scala:144:22]
  reg  [63:0] WBReg_rdata;	// @[playground/src/Top.scala:144:22]
  reg         ISReg_valid;	// @[playground/src/Top.scala:163:22]
  reg  [31:0] ISReg_inst;	// @[playground/src/Top.scala:163:22]
  reg  [63:0] ISReg_pc;	// @[playground/src/Top.scala:163:22]
  reg  [63:0] mstatus;	// @[playground/src/Top.scala:188:24]
  reg  [63:0] mtvec;	// @[playground/src/Top.scala:189:24]
  reg  [63:0] mepc;	// @[playground/src/Top.scala:190:24]
  reg  [63:0] mcause;	// @[playground/src/Top.scala:191:24]
  wire        _rs2v_T = _Decoder_io_rs2 == 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:223:34, :226:23]
  wire [63:0] rs2v = _rs2v_T ? 64'h0 : _R_ext_R1_data;	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27, :186:14, :223:{29,34}]
  wire        _rs1v_T = _Decoder_io_rs1 == 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:223:34, :226:23]
  wire [63:0] rs1v = _rs1v_T ? 64'h0 : _R_ext_R0_data;	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27, :186:14, :223:{29,34}]
  wire        _csridx_T_1 = _GEN_0 == 32'h73;	// @[playground/src/Top.scala:238:36, :302:22, :303:21, :307:21]
  wire [11:0] csridx = _csridx_T_1 ? 12'h305 : _GEN_0[31:20];	// @[playground/src/Top.scala:238:{19,36,81}, :302:22, :303:21, :307:21]
  wire        _WB_CSR_Hazard_T_7 = csridx == 12'h342;	// @[playground/src/Top.scala:238:19, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire        _WB_CSR_Hazard_T_6 = csridx == 12'h341;	// @[playground/src/Top.scala:238:19, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire [9:0]  _GEN_1 = {_GEN_0[14:12], _GEN_0[6:0]};	// @[playground/src/Top.scala:249:22, :302:22, :303:21, :307:21]
  assign _GEN_0 = IDReg_valid ? IDReg_inst : 32'h0;	// @[playground/src/Top.scala:90:22, :170:27, :184:27, :302:22, :303:21, :307:21]
  assign _GEN = IDReg_valid ? IDReg_pc : 64'h0;	// @[playground/src/Top.scala:90:22, :170:27, :173:21, :174:22, :184:27, :302:22, :304:19, :308:19]
  wire [31:0] _GEN_2 = LSReg_valid ? LSReg_alures[31:0] : 32'h0;	// @[playground/src/Top.scala:125:22, :170:27, :184:27, :388:28, :390:22, :402:30, :419:32]
  always_comb begin	// @[playground/src/Top.scala:474:51]
    casez (WBReg_memsext)	// @[playground/src/Top.scala:144:22, :474:51]
      3'b000:
        casez_tmp = {56'h0, WBReg_rdata[7:0]};	// @[playground/src/Top.scala:144:22, :474:51, :475:{26,31,51}]
      3'b001:
        casez_tmp = {48'h0, WBReg_rdata[15:0]};	// @[playground/src/Top.scala:144:22, :474:51, :476:{26,31,52}]
      3'b010:
        casez_tmp = {32'h0, WBReg_rdata[31:0]};	// @[playground/src/Top.scala:144:22, :170:27, :184:27, :474:51, :477:{26,52}]
      3'b011:
        casez_tmp = {{56{WBReg_rdata[7]}}, WBReg_rdata[7:0]};	// @[playground/src/Top.scala:144:22, :383:21, :474:51, :475:51, :478:{26,31}]
      3'b100:
        casez_tmp = {{48{WBReg_rdata[15]}}, WBReg_rdata[15:0]};	// @[playground/src/Top.scala:144:22, :384:22, :474:51, :476:52, :479:{26,31}]
      3'b101:
        casez_tmp = {{32{WBReg_rdata[31]}}, WBReg_rdata[31:0]};	// @[playground/src/Top.scala:144:22, :385:22, :474:51, :477:52, :480:{26,31}]
      3'b110:
        casez_tmp = WBReg_rdata;	// @[playground/src/Top.scala:144:22, :474:51]
      default:
        casez_tmp = WBReg_rdata;	// @[playground/src/Top.scala:144:22, :474:51]
    endcase	// @[playground/src/Top.scala:144:22, :474:51]
  end // always_comb
  wire        _GEN_3 = WBReg_valid & WBReg_csr_en;	// @[playground/src/Top.scala:144:22, :492:24]
  wire        _GEN_4 = WBReg_csridx == 12'h341;	// @[playground/src/Top.scala:144:22, :493:25, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire        _GEN_5 = WBReg_csridx == 12'h342;	// @[playground/src/Top.scala:144:22, :495:33, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire        _GEN_6 = WBReg_csridx == 12'h300;	// @[playground/src/Top.scala:144:22, :497:33, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire        _GEN_7 = WBReg_csridx == 12'h305;	// @[playground/src/Top.scala:144:22, :238:19, :499:33]
  wire [4:0]  _EX_RS2_Hazard_T = EXReg_valid ? EXReg_rd : 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:97:22, :524:45]
  wire [4:0]  _LS_RS2_Hazard_T = LSReg_valid ? LSReg_rd : 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:125:22, :526:45]
  wire [4:0]  _WB_RS2_Hazard_T = WBReg_valid ? WBReg_rd : 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:144:22, :530:45]
  wire        stall =
    _Decoder_io_rrs1 & (|_Decoder_io_rs1) & IDReg_valid
    & (_Decoder_io_rs1 == _EX_RS2_Hazard_T & EXReg_rden
       | _Decoder_io_rs1 == _LS_RS2_Hazard_T & LSReg_rden
       | _Decoder_io_rs1 == _NPC_Mem_io_out_bits_rd & _NPC_Mem_io_out_bits_rden
       | _Decoder_io_rs1 == _WB_RS2_Hazard_T & WBReg_rden) | _Decoder_io_rrs2
    & (|_Decoder_io_rs2) & IDReg_valid
    & (_Decoder_io_rs2 == _EX_RS2_Hazard_T & EXReg_rden
       | _Decoder_io_rs2 == _LS_RS2_Hazard_T & LSReg_rden
       | _Decoder_io_rs2 == _NPC_Mem_io_out_bits_rd & _NPC_Mem_io_out_bits_rden
       | _Decoder_io_rs2 == _WB_RS2_Hazard_T & WBReg_rden)
    | (_GEN_1 == 10'h173 | _GEN_1 == 10'hF3)
    & (csridx == (EXReg_valid ? EXReg_csridx : 12'h0) & EXReg_csr_en
       | EXReg_inst == 32'h73 & EXReg_valid & (_WB_CSR_Hazard_T_6 | _WB_CSR_Hazard_T_7)
       | csridx == (LSReg_valid ? LSReg_csridx : 12'h0) & LSReg_csr_en
       | LSReg_inst == 32'h73 & LSReg_valid & (_WB_CSR_Hazard_T_6 | _WB_CSR_Hazard_T_7)
       | csridx == _NPC_Mem_io_out_bits_csridx & _NPC_Mem_io_out_bits_csr_en
       | _NPC_Mem_io_out_bits_inst == 32'h73 & _NPC_Mem_io_out_valid
       & (_WB_CSR_Hazard_T_6 | _WB_CSR_Hazard_T_7)
       | csridx == (WBReg_valid ? WBReg_csridx : 12'h0) & WBReg_csr_en
       | WBReg_inst == 32'h73 & WBReg_valid & (_WB_CSR_Hazard_T_6 | _WB_CSR_Hazard_T_7));	// @[playground/src/Top.scala:90:22, :97:22, :125:22, :144:22, :226:23, :238:{19,36}, :249:22, :250:22, :372:23, :522:50, :523:50, :524:{38,45,74}, :525:{38,74}, :526:{38,45,74}, :527:{38,74}, :528:{39,66}, :529:{39,66}, :530:{38,45,74}, :531:{38,74}, :534:{36,46,65}, :535:{31,38,71,105,130,156}, :536:{31,38,71,103,128,154}, :537:{32,63,123,157,183}, :538:{31,38,71,103,128,154}, :541:{13,64}, :542:{13,64}, :545:{35,86}, :547:33, src/main/scala/chisel3/util/Mux.scala:77:13]
  assign IDRegen = ~stall & _NPC_Mem_io_in_ready;	// @[playground/src/Top.scala:372:23, :547:33, :552:16, :553:29, :554:13, :558:29, :559:13]
  `ifndef SYNTHESIS	// @[playground/src/Top.scala:500:15]
    always @(posedge clock) begin	// @[playground/src/Top.scala:500:15]
      if ((`PRINTF_COND_) & _GEN_3 & ~_GEN_4 & ~_GEN_5 & ~_GEN_6 & _GEN_7 & ~reset)	// @[playground/src/Top.scala:492:24, :493:{25,41}, :495:{33,51}, :497:{33,52}, :499:33, :500:15]
        $fwrite(32'h80000002, "mtvec old value = %x new value = %x pc = %x\n", mtvec,
                WBReg_csrwv, WBReg_pc);	// @[playground/src/Top.scala:144:22, :189:24, :500:15]
      if ((`PRINTF_COND_) & ~stall & _GEN_0 == 32'h73 & ~reset)	// @[playground/src/Top.scala:238:36, :302:22, :303:21, :307:21, :500:15, :547:33, :552:16, :561:27, :562:13]
        $fwrite(32'h80000002, "wb ecall; mtvec = %x\n", mtvec);	// @[playground/src/Top.scala:189:24, :500:15, :562:13]
    end // always @(posedge)
  `endif // not def SYNTHESIS
  assign ifu_dnpc =
    stall
      ? 64'h114514
      : _GEN_1 == 10'h67
          ? rs1v + _Decoder_io_imm
          : _GEN_0[6:0] == 7'h6F | _GEN_1 == 10'h63 | _GEN_1 == 10'hE3 | _GEN_1 == 10'h2E3
            | _GEN_1 == 10'h3E3 | _GEN_1 == 10'h263 | _GEN_1 == 10'h363
              ? _GEN + _Decoder_io_imm
              : _GEN_0 == 32'h30200073 ? mepc : _GEN_0 == 32'h73 ? mtvec : 64'h0;	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27, :189:24, :190:24, :223:29, :226:23, :232:35, :238:36, :249:22, :302:22, :303:21, :304:19, :307:21, :308:19, :547:33, :552:16, :556:14, :564:14, :565:{24,44}, :566:24, :567:24, :568:24, :569:24, :570:24, :571:24, :572:24, :573:24, :574:24, src/main/scala/chisel3/util/Mux.scala:141:16]
  assign pcsel =
    ~stall
    & (_GEN_1 == 10'h67 | _GEN_0[6:0] == 7'h6F
       | (_GEN_1 == 10'h63
            ? rs1v == rs2v
            : _GEN_1 == 10'hE3
                ? rs1v != rs2v
                : _GEN_1 == 10'h2E3
                    ? $signed(rs1v) >= $signed(rs2v)
                    : _GEN_1 == 10'h3E3
                        ? rs1v >= rs2v
                        : _GEN_1 == 10'h263
                            ? $signed(rs1v) < $signed(rs2v)
                            : _GEN_1 == 10'h363
                                ? rs1v < rs2v
                                : _GEN_0 == 32'h30200073 | _GEN_0 == 32'h73));	// @[playground/src/Top.scala:183:23, :223:29, :238:36, :249:22, :302:22, :303:21, :307:21, :547:33, :552:16, :553:29, :558:29, :565:24, :566:24, :567:24, :568:24, :569:24, :570:24, :571:24, :572:24, :573:24, :576:11, :577:24, :578:24, :579:{24,44}, :580:{24,44}, :581:{24,51}, :582:{24,44}, :583:{24,51}, :584:{24,44}, :585:24, :586:24, src/main/scala/chisel3/util/Mux.scala:141:16]
  wire        _csrrv_T_2 = csridx == 12'h300;	// @[playground/src/Top.scala:238:19, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire        _csrrv_T_6 = csridx == 12'h305;	// @[playground/src/Top.scala:238:19, src/main/scala/chisel3/util/Mux.scala:77:13]
  wire        _GEN_8 = WBReg_inst == 32'h73;	// @[playground/src/Top.scala:144:22, :238:36, :483:21]
  always @(posedge clock) begin	// @[<stdin>:3399:11]
    if (reset) begin	// @[<stdin>:3399:11]
      IDReg_valid <= 1'h1;	// @[<stdin>:3398:10, playground/src/Top.scala:90:22]
      IDReg_inst <= 32'h0;	// @[playground/src/Top.scala:90:22, :170:27, :184:27]
      IDReg_pc <= 64'h0;	// @[playground/src/Top.scala:90:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_valid <= 1'h1;	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
      EXReg_inst <= 32'h0;	// @[playground/src/Top.scala:97:22, :170:27, :184:27]
      EXReg_pc <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_rs1v <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_rs2v <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_csridx <= 12'h0;	// @[playground/src/Top.scala:97:22, :538:38]
      EXReg_csrrv <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_csrwv <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_csr_en <= 1'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      EXReg_imm <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
      EXReg_dataAsel <= 3'h0;	// @[<stdin>:3420:29, playground/src/Top.scala:97:22]
      EXReg_dataBsel <= 3'h0;	// @[<stdin>:3420:29, playground/src/Top.scala:97:22]
      EXReg_aluop <= 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:97:22]
      EXReg_memvalid <= 1'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      EXReg_memwen <= 1'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      EXReg_memwmask <= 8'h0;	// @[playground/src/Top.scala:97:22, :170:27, :184:27]
      EXReg_memsext <= 3'h6;	// @[<stdin>:3415:28, playground/src/Top.scala:97:22]
      EXReg_isEbreak <= 1'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      EXReg_isword <= 1'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      EXReg_rden <= 1'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      EXReg_rd <= 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:97:22]
      LSReg_valid <= 1'h1;	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
      LSReg_inst <= 32'h0;	// @[playground/src/Top.scala:125:22, :170:27, :184:27]
      LSReg_pc <= 64'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27]
      LSReg_alures <= 64'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27]
      LSReg_rs2v <= 64'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27]
      LSReg_csridx <= 12'h0;	// @[playground/src/Top.scala:125:22, :538:38]
      LSReg_csrwv <= 64'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27]
      LSReg_csr_en <= 1'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      LSReg_memvalid <= 1'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      LSReg_memwen <= 1'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      LSReg_memwmask <= 8'h0;	// @[playground/src/Top.scala:125:22, :170:27, :184:27]
      LSReg_memsext <= 3'h6;	// @[<stdin>:3415:28, playground/src/Top.scala:125:22]
      LSReg_rden <= 1'h0;	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      LSReg_rd <= 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:125:22]
      WBReg_valid <= 1'h1;	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
      WBReg_inst <= 32'h0;	// @[playground/src/Top.scala:144:22, :170:27, :184:27]
      WBReg_pc <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
      WBReg_alures <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
      WBReg_csridx <= 12'h0;	// @[playground/src/Top.scala:144:22, :538:38]
      WBReg_csrwv <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
      WBReg_csr_en <= 1'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      WBReg_rden <= 1'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      WBReg_rd <= 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:144:22]
      WBReg_memvalid <= 1'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :175:23, :184:27]
      WBReg_memsext <= 3'h6;	// @[<stdin>:3415:28, playground/src/Top.scala:144:22]
      WBReg_rdata <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
      ISReg_valid <= 1'h1;	// @[<stdin>:3398:10, playground/src/Top.scala:163:22]
      ISReg_inst <= 32'h0;	// @[playground/src/Top.scala:163:22, :170:27, :184:27]
      ISReg_pc <= 64'h0;	// @[playground/src/Top.scala:163:22, :170:27, :173:21, :174:22, :184:27]
      mstatus <= 64'hA00001800;	// @[playground/src/Top.scala:188:24]
      mtvec <= 64'h0;	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27, :189:24]
      mepc <= 64'h0;	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27, :190:24]
      mcause <= 64'h0;	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27, :191:24]
    end
    else begin	// @[<stdin>:3399:11]
      if (IDRegen) begin	// @[playground/src/Top.scala:552:16, :554:13, :559:13]
        IDReg_valid <= _InstFetcher_io_out_valid;	// @[playground/src/Top.scala:90:22, :184:27]
        if (_InstFetcher_io_out_valid) begin	// @[playground/src/Top.scala:184:27]
          IDReg_inst <= _InstFetcher_io_out_bits_inst;	// @[playground/src/Top.scala:90:22, :184:27]
          IDReg_pc <= _InstFetcher_io_out_bits_pc;	// @[playground/src/Top.scala:90:22, :184:27]
        end
        else begin	// @[playground/src/Top.scala:184:27]
          IDReg_inst <= 32'h0;	// @[playground/src/Top.scala:90:22, :170:27, :184:27]
          IDReg_pc <= 64'h0;	// @[playground/src/Top.scala:90:22, :170:27, :173:21, :174:22, :184:27]
        end
      end
      EXReg_valid <= ~stall & IDReg_valid;	// @[playground/src/Top.scala:90:22, :97:22, :547:33, :552:16, :553:29, :555:17, :558:29, :560:17]
      if (_NPC_Mem_io_in_ready) begin	// @[playground/src/Top.scala:372:23]
        if (IDReg_valid) begin	// @[playground/src/Top.scala:90:22]
          EXReg_inst <= IDReg_inst;	// @[playground/src/Top.scala:90:22, :97:22]
          EXReg_pc <= IDReg_pc;	// @[playground/src/Top.scala:90:22, :97:22]
        end
        else begin	// @[playground/src/Top.scala:90:22]
          EXReg_inst <= 32'h0;	// @[playground/src/Top.scala:97:22, :170:27, :184:27]
          EXReg_pc <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
        end
        if (_rs1v_T)	// @[playground/src/Top.scala:223:34]
          EXReg_rs1v <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
        else	// @[playground/src/Top.scala:223:34]
          EXReg_rs1v <= _R_ext_R0_data;	// @[playground/src/Top.scala:97:22, :186:14]
        if (_rs2v_T)	// @[playground/src/Top.scala:223:34]
          EXReg_rs2v <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
        else	// @[playground/src/Top.scala:223:34]
          EXReg_rs2v <= _R_ext_R1_data;	// @[playground/src/Top.scala:97:22, :186:14]
        if (_csridx_T_1)	// @[playground/src/Top.scala:238:36]
          EXReg_csridx <= 12'h305;	// @[playground/src/Top.scala:97:22, :238:19]
        else	// @[playground/src/Top.scala:238:36]
          EXReg_csridx <= _GEN_0[31:20];	// @[playground/src/Top.scala:97:22, :238:81, :302:22, :303:21, :307:21]
        if (_csrrv_T_6)	// @[src/main/scala/chisel3/util/Mux.scala:77:13]
          EXReg_csrrv <= mtvec;	// @[playground/src/Top.scala:97:22, :189:24]
        else if (_WB_CSR_Hazard_T_6)	// @[src/main/scala/chisel3/util/Mux.scala:77:13]
          EXReg_csrrv <= mepc;	// @[playground/src/Top.scala:97:22, :190:24]
        else if (_csrrv_T_2)	// @[src/main/scala/chisel3/util/Mux.scala:77:13]
          EXReg_csrrv <= mstatus;	// @[playground/src/Top.scala:97:22, :188:24]
        else if (_WB_CSR_Hazard_T_7)	// @[src/main/scala/chisel3/util/Mux.scala:77:13]
          EXReg_csrrv <= mcause;	// @[playground/src/Top.scala:97:22, :191:24]
        else	// @[src/main/scala/chisel3/util/Mux.scala:77:13]
          EXReg_csrrv <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
        if (_GEN_1 == 10'h173)	// @[playground/src/Top.scala:249:22]
          EXReg_csrwv <=
            rs1v
            | (_csrrv_T_6
                 ? mtvec
                 : _WB_CSR_Hazard_T_6
                     ? mepc
                     : _csrrv_T_2 ? mstatus : _WB_CSR_Hazard_T_7 ? mcause : 64'h0);	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27, :188:24, :189:24, :190:24, :191:24, :223:29, :249:42, src/main/scala/chisel3/util/Mux.scala:77:13]
        else if (_GEN_1 != 10'hF3 | _rs1v_T)	// @[playground/src/Top.scala:223:34, :249:22, :250:22, src/main/scala/chisel3/util/Mux.scala:141:16]
          EXReg_csrwv <= 64'h0;	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27]
        else	// @[src/main/scala/chisel3/util/Mux.scala:141:16]
          EXReg_csrwv <= _R_ext_R0_data;	// @[playground/src/Top.scala:97:22, :186:14]
        EXReg_csr_en <= _Decoder_io_csr_en;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_imm <= _Decoder_io_imm;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_dataAsel <= _Decoder_io_alu_sel_a;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_dataBsel <= _Decoder_io_alu_sel_b;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_aluop <= _Decoder_io_alu_op;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_memvalid <= _Decoder_io_memvalid;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_memwen <= _Decoder_io_memwen;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_memwmask <= _Decoder_io_memwmask;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_memsext <= _Decoder_io_memsext;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_isEbreak <= _Decoder_io_isEbreak;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_isword <= _Decoder_io_isword;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_rden <= _Decoder_io_rd_en;	// @[playground/src/Top.scala:97:22, :226:23]
        EXReg_rd <= _Decoder_io_rd;	// @[playground/src/Top.scala:97:22, :226:23]
        LSReg_inst <= EXReg_valid ? EXReg_inst : 32'h0;	// @[playground/src/Top.scala:97:22, :125:22, :170:27, :184:27, :325:20, :327:23, :354:20, :355:18]
        LSReg_pc <= EXReg_valid ? EXReg_pc : 64'h0;	// @[playground/src/Top.scala:97:22, :125:22, :170:27, :173:21, :174:22, :184:27, :325:20, :328:23, :354:20, :356:16]
        LSReg_rs2v <= EXReg_valid ? EXReg_rs2v : 64'h0;	// @[playground/src/Top.scala:97:22, :125:22, :170:27, :173:21, :174:22, :184:27, :325:20, :329:23, :354:20, :357:18]
        LSReg_csridx <= EXReg_valid ? EXReg_csridx : 12'h0;	// @[playground/src/Top.scala:97:22, :125:22, :325:20, :337:23, :354:20, :358:20, :538:38]
        LSReg_csrwv <= EXReg_valid ? EXReg_csrwv : 64'h0;	// @[playground/src/Top.scala:97:22, :125:22, :170:27, :173:21, :174:22, :184:27, :325:20, :339:23, :354:20, :360:19]
        LSReg_memwmask <= EXReg_valid ? EXReg_memwmask : 8'h0;	// @[playground/src/Top.scala:97:22, :125:22, :170:27, :184:27, :325:20, :332:23, :354:20, :363:22]
        LSReg_memsext <= EXReg_valid ? EXReg_memsext : 3'h6;	// @[<stdin>:3415:28, playground/src/Top.scala:97:22, :125:22, :325:20, :333:23, :354:20, :364:21]
        LSReg_rd <= EXReg_valid ? EXReg_rd : 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:97:22, :125:22, :325:20, :335:23, :354:20, :367:16]
      end
      if (EXReg_valid & _NPC_Mem_io_in_ready) begin	// @[playground/src/Top.scala:97:22, :125:22, :313:21, :325:20, :326:23, :372:23]
        LSReg_valid <= EXReg_valid;	// @[playground/src/Top.scala:97:22, :125:22]
        LSReg_alures <= _ALU_io_res;	// @[playground/src/Top.scala:125:22, :312:19]
      end
      if (EXReg_valid) begin	// @[playground/src/Top.scala:97:22]
        if (_NPC_Mem_io_in_ready) begin	// @[playground/src/Top.scala:372:23]
          LSReg_csr_en <= EXReg_csr_en;	// @[playground/src/Top.scala:97:22, :125:22]
          LSReg_memvalid <= EXReg_memvalid;	// @[playground/src/Top.scala:97:22, :125:22]
          LSReg_memwen <= EXReg_memwen;	// @[playground/src/Top.scala:97:22, :125:22]
          LSReg_rden <= EXReg_rden;	// @[playground/src/Top.scala:97:22, :125:22]
        end
      end
      else begin	// @[playground/src/Top.scala:97:22]
        LSReg_csr_en <= ~_NPC_Mem_io_in_ready & LSReg_csr_en;	// @[playground/src/Top.scala:125:22, :354:20, :361:22, :366:20, :372:23]
        LSReg_memvalid <= ~_NPC_Mem_io_in_ready & LSReg_memvalid;	// @[playground/src/Top.scala:125:22, :354:20, :361:22, :372:23]
        LSReg_memwen <= ~_NPC_Mem_io_in_ready & LSReg_memwen;	// @[playground/src/Top.scala:125:22, :354:20, :361:22, :362:20, :372:23]
        LSReg_rden <= ~_NPC_Mem_io_in_ready & LSReg_rden;	// @[playground/src/Top.scala:125:22, :354:20, :361:22, :365:18, :372:23]
      end
      WBReg_valid <= _NPC_Mem_io_out_valid;	// @[playground/src/Top.scala:144:22, :372:23]
      if (_NPC_Mem_io_out_valid) begin	// @[playground/src/Top.scala:372:23]
        WBReg_inst <= _NPC_Mem_io_out_bits_inst;	// @[playground/src/Top.scala:144:22, :372:23]
        WBReg_pc <= _NPC_Mem_io_out_bits_pc;	// @[playground/src/Top.scala:144:22, :372:23]
        WBReg_alures <= _NPC_Mem_io_out_bits_alures;	// @[playground/src/Top.scala:144:22, :372:23]
        WBReg_rd <= _NPC_Mem_io_out_bits_rd;	// @[playground/src/Top.scala:144:22, :372:23]
        WBReg_memsext <= _NPC_Mem_io_out_bits_memsext;	// @[playground/src/Top.scala:144:22, :372:23]
        WBReg_rdata <= _NPC_Mem_io_out_bits_rdata;	// @[playground/src/Top.scala:144:22, :372:23]
      end
      else begin	// @[playground/src/Top.scala:372:23]
        WBReg_inst <= 32'h0;	// @[playground/src/Top.scala:144:22, :170:27, :184:27]
        WBReg_pc <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
        WBReg_alures <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
        WBReg_rd <= 5'h0;	// @[<stdin>:3419:26, playground/src/Top.scala:144:22]
        WBReg_memsext <= 3'h6;	// @[<stdin>:3415:28, playground/src/Top.scala:144:22]
        WBReg_rdata <= 64'h0;	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27]
      end
      WBReg_csridx <= _NPC_Mem_io_out_bits_csridx;	// @[playground/src/Top.scala:144:22, :372:23]
      WBReg_csrwv <= _NPC_Mem_io_out_bits_csrwv;	// @[playground/src/Top.scala:144:22, :372:23]
      WBReg_csr_en <= _NPC_Mem_io_out_bits_csr_en;	// @[playground/src/Top.scala:144:22, :372:23]
      WBReg_rden <= _NPC_Mem_io_out_valid & _NPC_Mem_io_out_bits_rden;	// @[playground/src/Top.scala:144:22, :372:23, :434:31, :435:20, :451:20]
      WBReg_memvalid <= _NPC_Mem_io_out_valid & _NPC_Mem_io_out_bits_memvalid;	// @[playground/src/Top.scala:144:22, :372:23, :434:31, :435:20, :451:20]
      ISReg_valid <= WBReg_valid;	// @[playground/src/Top.scala:144:22, :163:22]
      if (WBReg_valid) begin	// @[playground/src/Top.scala:144:22]
        ISReg_inst <= WBReg_inst;	// @[playground/src/Top.scala:144:22, :163:22]
        ISReg_pc <= WBReg_pc;	// @[playground/src/Top.scala:144:22, :163:22]
        if (WBReg_csr_en & _GEN_4)	// @[playground/src/Top.scala:144:22, :483:32, :492:24, :493:{25,41}, :494:14]
          mepc <= WBReg_csrwv;	// @[playground/src/Top.scala:144:22, :190:24]
        else if (_GEN_8)	// @[playground/src/Top.scala:483:21]
          mepc <= WBReg_pc;	// @[playground/src/Top.scala:144:22, :190:24]
        if (~WBReg_csr_en | _GEN_4 | ~_GEN_5) begin	// @[playground/src/Top.scala:144:22, :483:32, :492:24, :493:{25,41}, :495:{33,51}]
          if (_GEN_8)	// @[playground/src/Top.scala:483:21]
            mcause <= 64'hB;	// @[playground/src/Top.scala:191:24, :485:14]
        end
        else	// @[playground/src/Top.scala:483:32, :492:24, :493:41]
          mcause <= WBReg_csrwv;	// @[playground/src/Top.scala:144:22, :191:24]
      end
      else begin	// @[playground/src/Top.scala:144:22]
        ISReg_inst <= 32'h0;	// @[playground/src/Top.scala:163:22, :170:27, :184:27]
        ISReg_pc <= 64'h0;	// @[playground/src/Top.scala:163:22, :170:27, :173:21, :174:22, :184:27]
      end
      if (~_GEN_3 | _GEN_4 | _GEN_5 | ~_GEN_6) begin	// @[playground/src/Top.scala:188:24, :468:22, :492:24, :493:{25,41}, :495:{33,51}, :497:{33,52}]
      end
      else	// @[playground/src/Top.scala:188:24, :468:22, :492:24, :493:41]
        mstatus <= WBReg_csrwv;	// @[playground/src/Top.scala:144:22, :188:24]
      if (~_GEN_3 | _GEN_4 | _GEN_5 | _GEN_6 | ~_GEN_7) begin	// @[playground/src/Top.scala:188:24, :189:24, :468:22, :492:24, :493:{25,41}, :495:{33,51}, :497:{33,52}, :499:{33,50}]
      end
      else	// @[playground/src/Top.scala:189:24, :468:22, :492:24, :493:41]
        mtvec <= WBReg_csrwv;	// @[playground/src/Top.scala:144:22, :189:24]
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// @[<stdin>:3398:10]
    `ifdef FIRRTL_BEFORE_INITIAL	// @[<stdin>:3398:10]
      `FIRRTL_BEFORE_INITIAL	// @[<stdin>:3398:10]
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM[0:54];	// @[<stdin>:3398:10]
    initial begin	// @[<stdin>:3398:10]
      `ifdef INIT_RANDOM_PROLOG_	// @[<stdin>:3398:10]
        `INIT_RANDOM_PROLOG_	// @[<stdin>:3398:10]
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// @[<stdin>:3398:10]
        for (logic [5:0] i = 6'h0; i < 6'h37; i += 6'h1) begin
          _RANDOM[i] = `RANDOM;	// @[<stdin>:3398:10]
        end	// @[<stdin>:3398:10]
        IDReg_valid = _RANDOM[6'h0][0];	// @[<stdin>:3398:10, playground/src/Top.scala:90:22]
        IDReg_inst = {_RANDOM[6'h0][31:1], _RANDOM[6'h1][0]};	// @[<stdin>:3398:10, playground/src/Top.scala:90:22]
        IDReg_pc = {_RANDOM[6'h1][31:1], _RANDOM[6'h2], _RANDOM[6'h3][0]};	// @[<stdin>:3398:10, playground/src/Top.scala:90:22]
        EXReg_valid = _RANDOM[6'h3][1];	// @[<stdin>:3398:10, playground/src/Top.scala:90:22, :97:22]
        EXReg_inst = {_RANDOM[6'h3][31:2], _RANDOM[6'h4][1:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:90:22, :97:22]
        EXReg_pc = {_RANDOM[6'h4][31:2], _RANDOM[6'h5], _RANDOM[6'h6][1:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_rs1v = {_RANDOM[6'h6][31:2], _RANDOM[6'h7], _RANDOM[6'h8][1:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_rs2v = {_RANDOM[6'h8][31:2], _RANDOM[6'h9], _RANDOM[6'hA][1:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_csridx = _RANDOM[6'hA][23:12];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_csrrv = {_RANDOM[6'hA][31:24], _RANDOM[6'hB], _RANDOM[6'hC][23:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_csrwv = {_RANDOM[6'hC][31:24], _RANDOM[6'hD], _RANDOM[6'hE][23:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_csr_en = _RANDOM[6'hE][24];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_imm = {_RANDOM[6'hE][31:25], _RANDOM[6'hF], _RANDOM[6'h10][24:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_dataAsel = _RANDOM[6'h10][27:25];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_dataBsel = _RANDOM[6'h10][30:28];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_aluop = {_RANDOM[6'h10][31], _RANDOM[6'h11][3:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_memvalid = _RANDOM[6'h11][4];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_memwen = _RANDOM[6'h11][5];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_memwmask = _RANDOM[6'h11][13:6];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_memsext = _RANDOM[6'h11][16:14];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_isEbreak = _RANDOM[6'h11][18];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_isword = _RANDOM[6'h11][19];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_rden = _RANDOM[6'h11][20];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        EXReg_rd = _RANDOM[6'h11][25:21];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22]
        LSReg_valid = _RANDOM[6'h11][26];	// @[<stdin>:3398:10, playground/src/Top.scala:97:22, :125:22]
        LSReg_inst = {_RANDOM[6'h11][31:27], _RANDOM[6'h12][26:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:97:22, :125:22]
        LSReg_pc = {_RANDOM[6'h12][31:27], _RANDOM[6'h13], _RANDOM[6'h14][26:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_alures = {_RANDOM[6'h14][31:27], _RANDOM[6'h15], _RANDOM[6'h16][26:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_rs2v = {_RANDOM[6'h16][31:27], _RANDOM[6'h17], _RANDOM[6'h18][26:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_csridx = {_RANDOM[6'h18][31:27], _RANDOM[6'h19][6:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_csrwv = {_RANDOM[6'h1B][31:7], _RANDOM[6'h1C], _RANDOM[6'h1D][6:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_csr_en = _RANDOM[6'h1D][7];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_memvalid = _RANDOM[6'h1D][8];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_memwen = _RANDOM[6'h1D][9];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_memwmask = _RANDOM[6'h1D][17:10];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_memsext = _RANDOM[6'h1D][20:18];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_rden = _RANDOM[6'h1D][21];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        LSReg_rd = _RANDOM[6'h1D][26:22];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22]
        WBReg_valid = _RANDOM[6'h1D][27];	// @[<stdin>:3398:10, playground/src/Top.scala:125:22, :144:22]
        WBReg_inst = {_RANDOM[6'h1D][31:28], _RANDOM[6'h1E][27:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:125:22, :144:22]
        WBReg_pc = {_RANDOM[6'h1E][31:28], _RANDOM[6'h1F], _RANDOM[6'h20][27:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_alures = {_RANDOM[6'h20][31:28], _RANDOM[6'h21], _RANDOM[6'h22][27:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_csridx = {_RANDOM[6'h22][31:28], _RANDOM[6'h23][7:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_csrwv = {_RANDOM[6'h25][31:8], _RANDOM[6'h26], _RANDOM[6'h27][7:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_csr_en = _RANDOM[6'h27][8];	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_rden = _RANDOM[6'h27][9];	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_rd = _RANDOM[6'h27][14:10];	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_memvalid = _RANDOM[6'h27][15];	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_memsext = _RANDOM[6'h27][18:16];	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        WBReg_rdata = {_RANDOM[6'h27][31:19], _RANDOM[6'h28], _RANDOM[6'h29][18:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:144:22]
        ISReg_valid = _RANDOM[6'h29][19];	// @[<stdin>:3398:10, playground/src/Top.scala:144:22, :163:22]
        ISReg_inst = {_RANDOM[6'h29][31:20], _RANDOM[6'h2A][19:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:144:22, :163:22]
        ISReg_pc = {_RANDOM[6'h2A][31:20], _RANDOM[6'h2B], _RANDOM[6'h2C][19:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:163:22]
        mstatus = {_RANDOM[6'h2E][31:20], _RANDOM[6'h2F], _RANDOM[6'h30][19:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:188:24]
        mtvec = {_RANDOM[6'h30][31:20], _RANDOM[6'h31], _RANDOM[6'h32][19:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:188:24, :189:24]
        mepc = {_RANDOM[6'h32][31:20], _RANDOM[6'h33], _RANDOM[6'h34][19:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:189:24, :190:24]
        mcause = {_RANDOM[6'h34][31:20], _RANDOM[6'h35], _RANDOM[6'h36][19:0]};	// @[<stdin>:3398:10, playground/src/Top.scala:190:24, :191:24]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// @[<stdin>:3398:10]
      `FIRRTL_AFTER_INITIAL	// @[<stdin>:3398:10]
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  MyArbiter AXI4Arbiter (	// @[playground/src/Top.scala:170:27]
    .clock                   (clock),
    .reset                   (reset),
    .io_ifu_bus_axi4_araddr  (_InstFetcher_io_axi4_to_arbiter_araddr),	// @[playground/src/Top.scala:184:27]
    .io_ifu_bus_axi4_arvalid (_InstFetcher_io_axi4_to_arbiter_arvalid),	// @[playground/src/Top.scala:184:27]
    .io_ifu_bus_axi4_rready  (_InstFetcher_io_axi4_to_arbiter_rready),	// @[playground/src/Top.scala:184:27]
    .io_ifu_bus_bus_reqr     (_InstFetcher_io_bus_reqr),	// @[playground/src/Top.scala:184:27]
    .io_lsu_bus_axi4_araddr  (_NPC_Mem_io_axi4_to_arbiter_araddr),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_arvalid (_NPC_Mem_io_axi4_to_arbiter_arvalid),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_rready  (_NPC_Mem_io_axi4_to_arbiter_rready),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_awaddr  (_NPC_Mem_io_axi4_to_arbiter_awaddr),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_awvalid (_NPC_Mem_io_axi4_to_arbiter_awvalid),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_wdata   (_NPC_Mem_io_axi4_to_arbiter_wdata),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_wstrb   (_NPC_Mem_io_axi4_to_arbiter_wstrb),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_wvalid  (_NPC_Mem_io_axi4_to_arbiter_wvalid),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_axi4_bready  (_NPC_Mem_io_axi4_to_arbiter_bready),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_bus_reqr     (_NPC_Mem_io_bus_reqr),	// @[playground/src/Top.scala:372:23]
    .io_lsu_bus_bus_reqw     (_NPC_Mem_io_bus_reqw),	// @[playground/src/Top.scala:372:23]
    .io_xbar_bus_arready     (_XBar2_io_axi4in_arready),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_rdata       (_XBar2_io_axi4in_rdata),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_rresp       (_XBar2_io_axi4in_rresp),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_rvalid      (_XBar2_io_axi4in_rvalid),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_awready     (_XBar2_io_axi4in_awready),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_wready      (_XBar2_io_axi4in_wready),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_bresp       (_XBar2_io_axi4in_bresp),	// @[playground/src/Top.scala:173:21]
    .io_xbar_bus_bvalid      (_XBar2_io_axi4in_bvalid),	// @[playground/src/Top.scala:173:21]
    .io_ifu_bus_axi4_arready (_AXI4Arbiter_io_ifu_bus_axi4_arready),
    .io_ifu_bus_axi4_rdata   (_AXI4Arbiter_io_ifu_bus_axi4_rdata),
    .io_ifu_bus_axi4_rresp   (_AXI4Arbiter_io_ifu_bus_axi4_rresp),
    .io_ifu_bus_axi4_rvalid  (_AXI4Arbiter_io_ifu_bus_axi4_rvalid),
    .io_ifu_bus_bus_ac       (_AXI4Arbiter_io_ifu_bus_bus_ac),
    .io_lsu_bus_axi4_arready (_AXI4Arbiter_io_lsu_bus_axi4_arready),
    .io_lsu_bus_axi4_rdata   (_AXI4Arbiter_io_lsu_bus_axi4_rdata),
    .io_lsu_bus_axi4_rresp   (_AXI4Arbiter_io_lsu_bus_axi4_rresp),
    .io_lsu_bus_axi4_rvalid  (_AXI4Arbiter_io_lsu_bus_axi4_rvalid),
    .io_lsu_bus_axi4_awready (_AXI4Arbiter_io_lsu_bus_axi4_awready),
    .io_lsu_bus_axi4_wready  (_AXI4Arbiter_io_lsu_bus_axi4_wready),
    .io_lsu_bus_axi4_bresp   (_AXI4Arbiter_io_lsu_bus_axi4_bresp),
    .io_lsu_bus_axi4_bvalid  (_AXI4Arbiter_io_lsu_bus_axi4_bvalid),
    .io_lsu_bus_bus_ac       (_AXI4Arbiter_io_lsu_bus_bus_ac),
    .io_xbar_bus_araddr      (_AXI4Arbiter_io_xbar_bus_araddr),
    .io_xbar_bus_arvalid     (_AXI4Arbiter_io_xbar_bus_arvalid),
    .io_xbar_bus_rready      (_AXI4Arbiter_io_xbar_bus_rready),
    .io_xbar_bus_awaddr      (_AXI4Arbiter_io_xbar_bus_awaddr),
    .io_xbar_bus_awvalid     (_AXI4Arbiter_io_xbar_bus_awvalid),
    .io_xbar_bus_wdata       (_AXI4Arbiter_io_xbar_bus_wdata),
    .io_xbar_bus_wstrb       (_AXI4Arbiter_io_xbar_bus_wstrb),
    .io_xbar_bus_wvalid      (_AXI4Arbiter_io_xbar_bus_wvalid),
    .io_xbar_bus_bready      (_AXI4Arbiter_io_xbar_bus_bready)
  );
  FAKE_SRAM_ONLY SRAM (	// @[playground/src/Top.scala:171:20]
    .clock           (clock),
    .reset           (reset),
    .io_axi4_araddr  (_XBar2_io_axi4out1_araddr),	// @[playground/src/Top.scala:173:21]
    .io_axi4_arvalid (_XBar2_io_axi4out1_arvalid),	// @[playground/src/Top.scala:173:21]
    .io_axi4_rready  (_XBar2_io_axi4out1_rready),	// @[playground/src/Top.scala:173:21]
    .io_axi4_awaddr  (_XBar2_io_axi4out1_awaddr),	// @[playground/src/Top.scala:173:21]
    .io_axi4_awvalid (_XBar2_io_axi4out1_awvalid),	// @[playground/src/Top.scala:173:21]
    .io_axi4_wdata   (_XBar2_io_axi4out1_wdata),	// @[playground/src/Top.scala:173:21]
    .io_axi4_wstrb   (_XBar2_io_axi4out1_wstrb),	// @[playground/src/Top.scala:173:21]
    .io_axi4_wvalid  (_XBar2_io_axi4out1_wvalid),	// @[playground/src/Top.scala:173:21]
    .io_axi4_bready  (_XBar2_io_axi4out1_bready),	// @[playground/src/Top.scala:173:21]
    .io_axi4_arready (_SRAM_io_axi4_arready),
    .io_axi4_rdata   (_SRAM_io_axi4_rdata),
    .io_axi4_rvalid  (_SRAM_io_axi4_rvalid),
    .io_axi4_awready (_SRAM_io_axi4_awready),
    .io_axi4_wready  (_SRAM_io_axi4_wready),
    .io_axi4_bvalid  (_SRAM_io_axi4_bvalid)
  );
  XBar XBar2 (	// @[playground/src/Top.scala:173:21]
    .clock               (clock),
    .reset               (reset),
    .io_axi4in_araddr    (_AXI4Arbiter_io_xbar_bus_araddr),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_arvalid   (_AXI4Arbiter_io_xbar_bus_arvalid),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_rready    (_AXI4Arbiter_io_xbar_bus_rready),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_awaddr    (_AXI4Arbiter_io_xbar_bus_awaddr),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_awvalid   (_AXI4Arbiter_io_xbar_bus_awvalid),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_wdata     (_AXI4Arbiter_io_xbar_bus_wdata),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_wstrb     (_AXI4Arbiter_io_xbar_bus_wstrb),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_wvalid    (_AXI4Arbiter_io_xbar_bus_wvalid),	// @[playground/src/Top.scala:170:27]
    .io_axi4in_bready    (_AXI4Arbiter_io_xbar_bus_bready),	// @[playground/src/Top.scala:170:27]
    .io_axi4out0_awready (_MyUart_io_axi4_awready),	// @[playground/src/Top.scala:174:22]
    .io_axi4out0_wready  (_MyUart_io_axi4_wready),	// @[playground/src/Top.scala:174:22]
    .io_axi4out0_bresp   (2'h0),	// @[playground/src/Top.scala:171:20]
    .io_axi4out0_bvalid  (_MyUart_io_axi4_bvalid),	// @[playground/src/Top.scala:174:22]
    .io_axi4out1_arready (_SRAM_io_axi4_arready),	// @[playground/src/Top.scala:171:20]
    .io_axi4out1_rdata   (_SRAM_io_axi4_rdata),	// @[playground/src/Top.scala:171:20]
    .io_axi4out1_rvalid  (_SRAM_io_axi4_rvalid),	// @[playground/src/Top.scala:171:20]
    .io_axi4out1_awready (_SRAM_io_axi4_awready),	// @[playground/src/Top.scala:171:20]
    .io_axi4out1_wready  (_SRAM_io_axi4_wready),	// @[playground/src/Top.scala:171:20]
    .io_axi4out1_bresp   (2'h0),	// @[playground/src/Top.scala:171:20]
    .io_axi4out1_bvalid  (_SRAM_io_axi4_bvalid),	// @[playground/src/Top.scala:171:20]
    .io_axi4out2_arready (_MyClint_io_axi4_arready),	// @[playground/src/Top.scala:175:23]
    .io_axi4out2_rdata   (_MyClint_io_axi4_rdata),	// @[playground/src/Top.scala:175:23]
    .io_axi4out2_rresp   (2'h0),	// @[playground/src/Top.scala:171:20]
    .io_axi4out2_rvalid  (_MyClint_io_axi4_rvalid),	// @[playground/src/Top.scala:175:23]
    .io_axi4in_arready   (_XBar2_io_axi4in_arready),
    .io_axi4in_rdata     (_XBar2_io_axi4in_rdata),
    .io_axi4in_rresp     (_XBar2_io_axi4in_rresp),
    .io_axi4in_rvalid    (_XBar2_io_axi4in_rvalid),
    .io_axi4in_awready   (_XBar2_io_axi4in_awready),
    .io_axi4in_wready    (_XBar2_io_axi4in_wready),
    .io_axi4in_bresp     (_XBar2_io_axi4in_bresp),
    .io_axi4in_bvalid    (_XBar2_io_axi4in_bvalid),
    .io_axi4out0_awvalid (_XBar2_io_axi4out0_awvalid),
    .io_axi4out0_wdata   (_XBar2_io_axi4out0_wdata),
    .io_axi4out0_wvalid  (_XBar2_io_axi4out0_wvalid),
    .io_axi4out0_bready  (_XBar2_io_axi4out0_bready),
    .io_axi4out1_araddr  (_XBar2_io_axi4out1_araddr),
    .io_axi4out1_arvalid (_XBar2_io_axi4out1_arvalid),
    .io_axi4out1_rready  (_XBar2_io_axi4out1_rready),
    .io_axi4out1_awaddr  (_XBar2_io_axi4out1_awaddr),
    .io_axi4out1_awvalid (_XBar2_io_axi4out1_awvalid),
    .io_axi4out1_wdata   (_XBar2_io_axi4out1_wdata),
    .io_axi4out1_wstrb   (_XBar2_io_axi4out1_wstrb),
    .io_axi4out1_wvalid  (_XBar2_io_axi4out1_wvalid),
    .io_axi4out1_bready  (_XBar2_io_axi4out1_bready),
    .io_axi4out2_araddr  (_XBar2_io_axi4out2_araddr),
    .io_axi4out2_arvalid (_XBar2_io_axi4out2_arvalid),
    .io_axi4out2_rready  (_XBar2_io_axi4out2_rready)
  );
  MyUART MyUart (	// @[playground/src/Top.scala:174:22]
    .clock           (clock),
    .reset           (reset),
    .io_axi4_awvalid (_XBar2_io_axi4out0_awvalid),	// @[playground/src/Top.scala:173:21]
    .io_axi4_wdata   (_XBar2_io_axi4out0_wdata),	// @[playground/src/Top.scala:173:21]
    .io_axi4_wvalid  (_XBar2_io_axi4out0_wvalid),	// @[playground/src/Top.scala:173:21]
    .io_axi4_bready  (_XBar2_io_axi4out0_bready),	// @[playground/src/Top.scala:173:21]
    .io_axi4_awready (_MyUart_io_axi4_awready),
    .io_axi4_wready  (_MyUart_io_axi4_wready),
    .io_axi4_bvalid  (_MyUart_io_axi4_bvalid)
  );
  MyCLINT MyClint (	// @[playground/src/Top.scala:175:23]
    .clock           (clock),
    .reset           (reset),
    .io_axi4_araddr  (_XBar2_io_axi4out2_araddr),	// @[playground/src/Top.scala:173:21]
    .io_axi4_arvalid (_XBar2_io_axi4out2_arvalid),	// @[playground/src/Top.scala:173:21]
    .io_axi4_rready  (_XBar2_io_axi4out2_rready),	// @[playground/src/Top.scala:173:21]
    .io_axi4_arready (_MyClint_io_axi4_arready),
    .io_axi4_rdata   (_MyClint_io_axi4_rdata),
    .io_axi4_rvalid  (_MyClint_io_axi4_rvalid)
  );
  IFU InstFetcher (	// @[playground/src/Top.scala:184:27]
    .clock                      (clock),
    .reset                      (reset),
    .io_in_valid                (~stall & ~reset),	// @[playground/src/Top.scala:547:33, :552:16, :553:29, :558:{29,45}]
    .io_in_bits_stall           (stall),	// @[playground/src/Top.scala:547:33]
    .io_in_bits_isdnpc          (pcsel),	// @[playground/src/Top.scala:183:23, :552:16, :576:11]
    .io_in_bits_dnpc            (pcsel ? ifu_dnpc : 64'h0),	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :183:23, :184:27, :212:37, :552:16, :556:14, :564:14, :576:11]
    .io_out_ready               (IDRegen & ~reset),	// @[playground/src/Top.scala:210:{39,55}, :552:16, :554:13, :559:13]
    .io_axi4_to_arbiter_arready (_AXI4Arbiter_io_ifu_bus_axi4_arready),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_rdata   (_AXI4Arbiter_io_ifu_bus_axi4_rdata),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_rresp   (_AXI4Arbiter_io_ifu_bus_axi4_rresp),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_rvalid  (_AXI4Arbiter_io_ifu_bus_axi4_rvalid),	// @[playground/src/Top.scala:170:27]
    .io_bus_ac                  (_AXI4Arbiter_io_ifu_bus_bus_ac),	// @[playground/src/Top.scala:170:27]
    .io_out_valid               (_InstFetcher_io_out_valid),
    .io_out_bits_pc             (_InstFetcher_io_out_bits_pc),
    .io_out_bits_inst           (_InstFetcher_io_out_bits_inst),
    .io_axi4_to_arbiter_araddr  (_InstFetcher_io_axi4_to_arbiter_araddr),
    .io_axi4_to_arbiter_arvalid (_InstFetcher_io_axi4_to_arbiter_arvalid),
    .io_axi4_to_arbiter_rready  (_InstFetcher_io_axi4_to_arbiter_rready),
    .io_bus_reqr                (_InstFetcher_io_bus_reqr)
  );
  R_combMem R_ext (	// @[playground/src/Top.scala:186:14]
    .R0_addr (_Decoder_io_rs1),	// @[playground/src/Top.scala:226:23]
    .R0_en   (1'h1),	// @[<stdin>:3398:10]
    .R0_clk  (clock),
    .R1_addr (_Decoder_io_rs2),	// @[playground/src/Top.scala:226:23]
    .R1_en   (1'h1),	// @[<stdin>:3398:10]
    .R1_clk  (clock),
    .W0_addr (5'h0),	// @[<stdin>:3419:26]
    .W0_en   (1'h1),	// @[<stdin>:3398:10]
    .W0_clk  (clock),
    .W0_data (64'h0),	// @[playground/src/Top.scala:170:27, :173:21, :174:22, :184:27]
    .W1_addr (WBReg_rd),	// @[playground/src/Top.scala:144:22]
    .W1_en   (WBReg_valid & WBReg_rden & (|WBReg_rd)),	// @[playground/src/Top.scala:144:22, :186:14, :468:22, :487:22, :488:{22,31}]
    .W1_clk  (clock),
    .W1_data (WBReg_memvalid ? (WBReg_valid ? casez_tmp : 64'h0) : WBReg_alures),	// @[playground/src/Top.scala:144:22, :170:27, :173:21, :174:22, :184:27, :387:29, :468:22, :474:{17,51}, :489:27]
    .R0_data (_R_ext_R0_data),
    .R1_data (_R_ext_R1_data)
  );
  IDU Decoder (	// @[playground/src/Top.scala:226:23]
    .io_inst      (_GEN_0),	// @[playground/src/Top.scala:302:22, :303:21, :307:21]
    .io_rs1       (_Decoder_io_rs1),
    .io_rs2       (_Decoder_io_rs2),
    .io_rd        (_Decoder_io_rd),
    .io_rd_en     (_Decoder_io_rd_en),
    .io_csr_en    (_Decoder_io_csr_en),
    .io_imm       (_Decoder_io_imm),
    .io_alu_op    (_Decoder_io_alu_op),
    .io_alu_sel_a (_Decoder_io_alu_sel_a),
    .io_alu_sel_b (_Decoder_io_alu_sel_b),
    .io_isEbreak  (_Decoder_io_isEbreak),
    .io_memvalid  (_Decoder_io_memvalid),
    .io_memwen    (_Decoder_io_memwen),
    .io_memwmask  (_Decoder_io_memwmask),
    .io_memsext   (_Decoder_io_memsext),
    .io_isword    (_Decoder_io_isword),
    .io_rrs1      (_Decoder_io_rrs1),
    .io_rrs2      (_Decoder_io_rrs2)
  );
  EXU ALU (	// @[playground/src/Top.scala:312:19]
    .io_inst   (EXReg_valid ? EXReg_inst : 32'h0),	// @[playground/src/Top.scala:97:22, :170:27, :184:27, :313:21, :314:19, :343:17]
    .io_rs1v   (EXReg_valid ? EXReg_rs1v : 64'h0),	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27, :313:21, :320:19, :349:17]
    .io_rs2v   (EXReg_valid ? EXReg_rs2v : 64'h0),	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27, :313:21, :321:19, :350:17]
    .io_csrrv  (EXReg_valid ? EXReg_csrrv : 64'h0),	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27, :313:21, :324:19, :352:19]
    .io_pc     (EXReg_valid ? EXReg_pc : 64'h0),	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27, :313:21, :315:19, :344:15]
    .io_asel   (EXReg_valid ? EXReg_dataAsel : 3'h0),	// @[<stdin>:3420:29, playground/src/Top.scala:97:22, :313:21, :317:19, :346:17]
    .io_bsel   (EXReg_valid ? EXReg_dataBsel : 3'h0),	// @[<stdin>:3420:29, playground/src/Top.scala:97:22, :313:21, :318:19, :347:17]
    .io_alu_op (EXReg_valid ? EXReg_aluop : 5'h0),	// @[<stdin>:3419:26, playground/src/Top.scala:97:22, :313:21, :316:19, :345:19]
    .io_imm    (EXReg_valid ? EXReg_imm : 64'h0),	// @[playground/src/Top.scala:97:22, :170:27, :173:21, :174:22, :184:27, :313:21, :319:19, :348:16]
    .io_isword (EXReg_valid & EXReg_isword),	// @[playground/src/Top.scala:97:22, :313:21, :322:19, :353:19]
    .io_res    (_ALU_io_res)
  );
  LSU NPC_Mem (	// @[playground/src/Top.scala:372:23]
    .clock                      (clock),
    .reset                      (reset),
    .io_in_valid                (LSReg_valid),	// @[playground/src/Top.scala:125:22]
    .io_in_bits_inst            (LSReg_valid ? LSReg_inst : 32'h0),	// @[playground/src/Top.scala:125:22, :170:27, :184:27, :390:22, :394:29, :413:31]
    .io_in_bits_pc              (LSReg_valid ? LSReg_pc : 64'h0),	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27, :390:22, :395:27, :414:29]
    .io_in_bits_alures          (LSReg_valid ? LSReg_alures : 64'h0),	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27, :390:22, :396:31, :415:33]
    .io_in_bits_memvalid        (LSReg_valid & LSReg_memvalid),	// @[playground/src/Top.scala:125:22, :390:22, :398:33, :416:35]
    .io_in_bits_wen             (LSReg_valid & LSReg_memwen),	// @[playground/src/Top.scala:125:22, :390:22, :399:28, :418:30]
    .io_in_bits_wmask           (LSReg_valid ? {56'h0, LSReg_memwmask} : 64'h0),	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27, :390:22, :400:30, :422:32, :475:31]
    .io_in_bits_wsext           (LSReg_valid ? LSReg_memsext : 3'h6),	// @[<stdin>:3415:28, playground/src/Top.scala:125:22, :390:22, :401:30, :423:32]
    .io_in_bits_raddr           (_GEN_2),	// @[playground/src/Top.scala:390:22, :402:30, :419:32]
    .io_in_bits_waddr           (_GEN_2),	// @[playground/src/Top.scala:390:22, :402:30, :419:32]
    .io_in_bits_wdata           (LSReg_valid ? LSReg_rs2v : 64'h0),	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27, :390:22, :404:30, :421:32]
    .io_in_bits_rden            (LSReg_valid & LSReg_rden),	// @[playground/src/Top.scala:125:22, :390:22, :405:29, :424:31]
    .io_in_bits_rd              (LSReg_valid ? LSReg_rd : 5'h0),	// @[<stdin>:3419:26, playground/src/Top.scala:125:22, :390:22, :406:27, :425:29]
    .io_in_bits_csridx          (LSReg_valid ? LSReg_csridx : 12'h0),	// @[playground/src/Top.scala:125:22, :390:22, :407:31, :426:33, :538:38]
    .io_in_bits_csrwv           (LSReg_valid ? LSReg_csrwv : 64'h0),	// @[playground/src/Top.scala:125:22, :170:27, :173:21, :174:22, :184:27, :390:22, :409:30, :428:32]
    .io_in_bits_csr_en          (LSReg_valid & LSReg_csr_en),	// @[playground/src/Top.scala:125:22, :390:22, :410:31, :429:33]
    .io_axi4_to_arbiter_arready (_AXI4Arbiter_io_lsu_bus_axi4_arready),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_rdata   (_AXI4Arbiter_io_lsu_bus_axi4_rdata),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_rresp   (_AXI4Arbiter_io_lsu_bus_axi4_rresp),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_rvalid  (_AXI4Arbiter_io_lsu_bus_axi4_rvalid),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_awready (_AXI4Arbiter_io_lsu_bus_axi4_awready),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_wready  (_AXI4Arbiter_io_lsu_bus_axi4_wready),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_bresp   (_AXI4Arbiter_io_lsu_bus_axi4_bresp),	// @[playground/src/Top.scala:170:27]
    .io_axi4_to_arbiter_bvalid  (_AXI4Arbiter_io_lsu_bus_axi4_bvalid),	// @[playground/src/Top.scala:170:27]
    .io_bus_ac                  (_AXI4Arbiter_io_lsu_bus_bus_ac),	// @[playground/src/Top.scala:170:27]
    .io_in_ready                (_NPC_Mem_io_in_ready),
    .io_out_valid               (_NPC_Mem_io_out_valid),
    .io_out_bits_inst           (_NPC_Mem_io_out_bits_inst),
    .io_out_bits_pc             (_NPC_Mem_io_out_bits_pc),
    .io_out_bits_alures         (_NPC_Mem_io_out_bits_alures),
    .io_out_bits_memvalid       (_NPC_Mem_io_out_bits_memvalid),
    .io_out_bits_rden           (_NPC_Mem_io_out_bits_rden),
    .io_out_bits_rd             (_NPC_Mem_io_out_bits_rd),
    .io_out_bits_csridx         (_NPC_Mem_io_out_bits_csridx),
    .io_out_bits_csrwv          (_NPC_Mem_io_out_bits_csrwv),
    .io_out_bits_csr_en         (_NPC_Mem_io_out_bits_csr_en),
    .io_out_bits_memsext        (_NPC_Mem_io_out_bits_memsext),
    .io_out_bits_rdata          (_NPC_Mem_io_out_bits_rdata),
    .io_axi4_to_arbiter_araddr  (_NPC_Mem_io_axi4_to_arbiter_araddr),
    .io_axi4_to_arbiter_arvalid (_NPC_Mem_io_axi4_to_arbiter_arvalid),
    .io_axi4_to_arbiter_rready  (_NPC_Mem_io_axi4_to_arbiter_rready),
    .io_axi4_to_arbiter_awaddr  (_NPC_Mem_io_axi4_to_arbiter_awaddr),
    .io_axi4_to_arbiter_awvalid (_NPC_Mem_io_axi4_to_arbiter_awvalid),
    .io_axi4_to_arbiter_wdata   (_NPC_Mem_io_axi4_to_arbiter_wdata),
    .io_axi4_to_arbiter_wstrb   (_NPC_Mem_io_axi4_to_arbiter_wstrb),
    .io_axi4_to_arbiter_wvalid  (_NPC_Mem_io_axi4_to_arbiter_wvalid),
    .io_axi4_to_arbiter_bready  (_NPC_Mem_io_axi4_to_arbiter_bready),
    .io_bus_reqr                (_NPC_Mem_io_bus_reqr),
    .io_bus_reqw                (_NPC_Mem_io_bus_reqw)
  );
  DPIC_EBREAK Ebreak (	// @[playground/src/Top.scala:590:22]
    .isEbreak (EXReg_isEbreak),	// @[playground/src/Top.scala:97:22]
    .clk      (clock)
  );
  assign io_inst = ISReg_valid ? ISReg_inst : 32'h0;	// @[<stdin>:3398:10, playground/src/Top.scala:163:22, :170:27, :184:27, :514:21, :515:13, :518:13]
  assign io_pc = ISReg_valid ? ISReg_pc : 64'h0;	// @[<stdin>:3398:10, playground/src/Top.scala:163:22, :170:27, :173:21, :174:22, :184:27, :514:21, :516:11, :519:11]
  assign io_npc = WBReg_valid ? LSReg_pc : 64'h0;	// @[<stdin>:3398:10, playground/src/Top.scala:125:22, :144:22, :170:27, :173:21, :174:22, :184:27, :468:22, :472:12, :508:12]
endmodule

